<modification>
    <id>Multi Vendor Drop Shipper 1.1.0 - Coded by waabay.com</id>
    <version>1.1.0</version>
    <vqmver>2.1.5</vqmver>
    <author>waabay</author>
	<email>waabay@gmail.com</email>
	<website>http://www.waabay.com</website>
	
	<!--Edit User Library-->
	<file name="system/library/user.php">
		<operation error="skip">
			<search position="after"><![CDATA[
			private $username;
			]]></search>
			<add><![CDATA[
			private $store_permission;
			private $cat_permission;
			private $vendor_permission;
			private $folder_path;
			private $account_expired;
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->username = $user_query->row['username'];
			]]></search>
			<add><![CDATA[
			$this->store_permission = $user_query->row['store_permission'];
			$this->cat_permission = $user_query->row['cat_permission'];
			$this->vendor_permission = $user_query->row['vendor_permission'];
			$this->folder_path = $user_query->row['folder'];
			if((strtotime(date('Y-m-d')) >= strtotime($user_query->row['user_date_start'])) && (strtotime(date('Y-m-d')) <= strtotime($user_query->row['user_date_end'])) || (($user_query->row['user_date_start'] == '0000-00-00') && ($user_query->row['user_date_end'] == '0000-00-00'))) {
				$this->account_expired = FALSE;
			} else {
				$this->account_expired = TRUE;
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->username = '';
			]]></search>
			<add><![CDATA[
			$this->store_permission = '';
			$this->cat_permission = '';
			$this->vendor_permission = '';
			$this->folder_path = '';
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after" offset="1"><![CDATA[
			return $this->username;
			]]></search>
			<add><![CDATA[
			public function getSP() {
				return $this->store_permission;
			}
			
			public function getCP() {
				return $this->cat_permission;
			}
			
			public function getVP() {
				return $this->vendor_permission;
			}
			
			public function getStorePath() {
				return $this->folder_path;
			}
			
			public function IsAccountExpired() {
				return $this->account_expired;
			}
			]]></add>
		</operation>
	</file>
	
	<!--Edit Download-->
	<file name="admin/controller/catalog/download.php">
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->data['entry_update'] = $this->language->get('entry_update');
			]]></search>
			<add><![CDATA[
			$this->data['text_none'] = $this->language->get('text_none');
			$this->data['entry_vendor_name'] = $this->language->get('entry_vendor_name');
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			$this->template = 'catalog/download_form.tpl';
			]]></search>
			<add><![CDATA[
			$this->data['vendors'] = array();
			$this->load->model('catalog/pro2ven');
			$this->data['vendors'] = $this->model_catalog_pro2ven->getVendors();
			if (isset($this->request->post['vendor'])) {
				$this->data['vendor'] = $this->request->post['vendor'];
			} elseif (isset($download_info)) {
				$this->data['vendor'] = $download_info['vendor_id'];
			} else {
				$this->data['vendor'] = 0;
			}
			]]></add>
		</operation>
	</file>
	
	<!--Edit Information-->
	<file name="admin/controller/catalog/information.php">
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->data['entry_layout'] = $this->language->get('entry_layout');
			]]></search>
			<add><![CDATA[
			$this->data['text_none'] = $this->language->get('text_none');
			$this->data['entry_vendor_name'] = $this->language->get('entry_vendor_name');
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before" index="2"><![CDATA[
			$this->data['breadcrumbs'] = array();
			]]></search>
			<add><![CDATA[
			if ($this->user->getVP()) {
				$this->data['vendor_access'] = TRUE;
			} else {
				$this->data['vendor_access'] = FALSE;
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			if (isset($this->request->post['information_layout'])) {
			]]></search>
			<add><![CDATA[
			$this->load->model('catalog/pro2ven');
			$this->data['vendors'] = $this->model_catalog_pro2ven->getVendors();
			
			if (isset($this->request->post['vendor_id'])) {
				$this->data['vendor_id'] = $this->request->post['vendor_id'];
			} elseif (!empty($information_info)) {
				$this->data['vendor_id'] = $information_info['vendor_id'];
			} else {
				$this->data['vendor_id'] = '';
			}
			]]></add>
		</operation>
	</file>
	
	<!--Edit Product-->
	<file name="admin/controller/catalog/product.php">
		<operation error="skip">
			<search position="before" index="1,2,3,4"><![CDATA[
			if (isset($this->request->get['filter_price'])) {
			]]></search>
			<add><![CDATA[
			if (isset($this->request->get['filter_sku'])) {
				$url .= '&filter_sku=' . $this->request->get['filter_sku'];
			}	
			
			if (isset($this->request->get['filter_vendor_name'])) {
				$url .= '&filter_vendor_name=' . $this->request->get['filter_vendor_name'];
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before" index="5"><![CDATA[
			if (isset($this->request->get['sort'])) {
			]]></search>
			<add><![CDATA[
			if (isset($this->request->get['filter_sku'])) {
				$filter_sku = $this->request->get['filter_sku'];
			} else {
				$filter_sku = null;
			}
			
			if (isset($this->request->get['filter_vendor'])) {
				$filter_vendor = $this->request->get['filter_vendor'];
			} else {
				$filter_vendor = NULL;
			}
			
			if (isset($this->request->get['filter_vendor_name'])) {
				$filter_vendor_name = $this->request->get['filter_vendor_name'];
			} else {
				$filter_vendor_name = NULL;
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before" index="6,7,8"><![CDATA[
			if (isset($this->request->get['filter_price'])) {
			]]></search>
			<add><![CDATA[
			if (isset($this->request->get['filter_sku'])) {
				$url .= '&filter_sku=' . $this->request->get['filter_sku'];
			}
			
			if (isset($this->request->get['filter_vendor_name'])) {
				$url .= '&filter_vendor_name=' . $this->request->get['filter_vendor_name'];
			}
			
			if (isset($this->request->get['filter_vendor'])) {
				$url .= '&filter_vendor=' . $this->request->get['filter_vendor'];
			}
			]]></add>
		</operation>
			
		<operation error="skip">
			<search position="after"><![CDATA[
			'filter_status'   => $filter_status,
			]]></search>
			<add><![CDATA[
			'filter_sku'	 	   => $filter_sku,
			'filter_vendor'   	   => $filter_vendor, 
			'filter_vendor_name'   => $filter_vendor_name,
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			$this->data['products'][] = array(
			]]></search>
			<add><![CDATA[
			if ($result['status'] == 5) {
				$status = $this->language->get('txt_pending_approval');
			} elseif ($result['status']) {
				$status = $this->language->get('text_enabled');
			} else {
				$status = $this->language->get('text_disabled');
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			'special'    => $special,
			]]></search>
			<add><![CDATA[
			'sku'      	 => $result['sku'],
			'vendor_name'=> $result['vendor_name'],
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			'status'     => ($result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled')),
			]]></search>
			<add><![CDATA[
			'status'     => $status,
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->data['column_model'] = $this->language->get('column_model');	
			]]></search>
			<add><![CDATA[
			$this->data['column_vendor'] = $this->language->get('column_vendor');
			$this->data['column_sku'] = $this->language->get('column_sku');
			$this->data['txt_pending_approval'] = $this->language->get('txt_pending_approval');
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			$this->data['sort_price'] = $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . '&sort=p.price' . $url, 'SSL');
			]]></search>
			<add><![CDATA[
			$this->data['sort_sku'] = $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . '&sort=p.sku' . $url, 'SSL');
			$this->data['sort_vendor_name'] = $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . '&sort=vds.vendor_id' . $url, 'SSL');
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->data['filter_model'] = $filter_model;
			]]></search>
			<add><![CDATA[
			$this->data['filter_sku'] = $filter_sku;
			$this->data['filter_vendor_name'] = $filter_vendor_name;
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			$this->data['button_save'] = $this->language->get('button_save');
			]]></search>
			<add><![CDATA[
			$this->data['entry_vendor_country_origin'] = $this->language->get('entry_vendor_country_origin');
			$this->data['entry_vendor_product_cost'] = $this->language->get('entry_vendor_product_cost');
			$this->data['entry_vendor_shipping_method'] = $this->language->get('entry_vendor_shipping_method');
			$this->data['entry_vendor_prefered_shipping_method'] = $this->language->get('entry_vendor_prefered_shipping_method');
			$this->data['entry_vendor_shipping_cost'] = $this->language->get('entry_vendor_shipping_cost');
			$this->data['entry_vendor_total'] = $this->language->get('entry_vendor_total');
			$this->data['entry_vendor_company'] = $this->language->get('entry_vendor_company');
			$this->data['entry_vendor_description'] = $this->language->get('entry_vendor_description');
			$this->data['entry_vendor_contact_name'] = $this->language->get('entry_vendor_contact_name');
			$this->data['entry_vendor_telephone'] = $this->language->get('entry_vendor_telephone');
			$this->data['entry_vendor_fax'] = $this->language->get('entry_vendor_fax');
			$this->data['entry_vendor_email'] = $this->language->get('entry_vendor_email');
			$this->data['entry_vendor_paypal_email'] = $this->language->get('entry_vendor_paypal_email');
			$this->data['entry_vendor_address'] = $this->language->get('entry_vendor_address');
			$this->data['entry_vendor_country_zone'] = $this->language->get('entry_vendor_country_zone');
			$this->data['entry_vendor_store_url'] = $this->language->get('entry_vendor_store_url');
			$this->data['entry_vendor_product_url'] = $this->language->get('entry_vendor_product_url');
			$this->data['entry_vendor_name'] = $this->language->get('entry_vendor_name');
			$this->data['entry_vendor_wholesale'] = $this->language->get('entry_vendor_wholesale');
			$this->data['tab_vendor'] = $this->language->get('tab_vendor');
			$this->data['txt_pending_approval'] = $this->language->get('txt_pending_approval');
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			$this->load->model('setting/store');
			]]></search>
			<add><![CDATA[
			$this->load->model('setting/setting');
			$this->data['config'] = $this->model_setting_setting->getSetting('config');
			$this->data['countries'] = $this->model_catalog_product->getCountry();	
			
			if (isset($this->request->post['ori_country'])) {
				$this->data['ori_country'] = $this->request->post['ori_country'];
			} else if (isset($product_info)) {
				$this->data['ori_country'] = $product_info['ori_country'];
			} else {
				$this->data['ori_country'] = '';
			}
			
			if (isset($this->request->post['product_cost'])) {
				$this->data['product_cost'] = $this->request->post['product_cost'];
			} else if (isset($product_info)) {
				$this->data['product_cost'] = $product_info['product_cost'];
			} else {
				$this->data['product_cost'] = '';
			}
			
			$this->data['couriers'] = $this->model_catalog_product->getCourier();	
			if (isset($this->request->post['shipping_method'])) {
				$this->data['shipping_method'] = $this->request->post['shipping_method'];
			} else if (isset($product_info)) {
				$this->data['shipping_method'] = $product_info['shipping_method'];
			} else {
				$this->data['shipping_method'] = '0';
			}
			
			if (isset($this->request->post['prefered_shipping'])) {
				$this->data['prefered_shipping'] = $this->request->post['prefered_shipping'];
			} else if (isset($product_info)) {
				$this->data['prefered_shipping'] = $product_info['prefered_shipping'];
			} else {
				$this->data['prefered_shipping'] = '0';
			}
			
			if (isset($this->request->post['shipping_cost'])) {
				$this->data['shipping_cost'] = $this->request->post['shipping_cost'];
			} else if (isset($product_info)) {
				$this->data['shipping_cost'] = $product_info['shipping_cost'];
			} else {
				$this->data['shipping_cost'] = '';
			}
			
			if (isset($this->request->post['vtotal'])) {
				$this->data['vtotal'] = $this->request->post['vtotal'];
			} else if (isset($product_info)) {
				$this->data['vtotal'] = $product_info['vtotal'];
			} else {
				$this->data['vtotal'] = '';
			}
			
			if (isset($this->request->post['product_url'])) {
				$this->data['product_url'] = $this->request->post['product_url'];
			} else if (isset($product_info)) {
				$this->data['product_url'] = $product_info['product_url'];
			} else {
				$this->data['product_url'] = '';
			}
			
			$this->data['vendors'] = $this->model_catalog_product->getVendors();
			if (isset($this->request->post['vendor'])) {
				$this->data['vendor'] = $this->request->post['vendor'];
			} elseif (isset($product_info)) {
				$this->data['vendor'] = $product_info['vendor'];
			} else {
				$this->data['vendor'] = 0;
			}
					
			if (isset($this->request->post['wholesale'])) {
				$this->data['wholesale'] = $this->request->post['wholesale'];
			} else if (isset($product_info)) {
				$this->data['wholesale'] = $product_info['wholesale'];
			} else {
				$this->data['wholesale'] = '';
			}
			
			if (isset($this->request->post['company'])) {
				$this->data['company'] = $this->request->post['company'];
			} else if (isset($product_info)) {
				$this->data['company'] = $product_info['company'];
			} else {
				$this->data['company'] = '';
			}
			
			if (isset($this->request->post['vname'])) {
				$this->data['vname'] = $this->request->post['vname'];
			} else if (isset($product_info)) {
				$this->data['vname'] = $product_info['vname'];
			} else {
				$this->data['vname'] = '';
			}
			
			if (isset($this->request->post['telephone'])) {
				$this->data['telephone'] = $this->request->post['telephone'];
			} else if (isset($product_info)) {
				$this->data['telephone'] = $product_info['telephone'];
			} else {
				$this->data['telephone'] = '';
			}
			
			if (isset($this->request->post['fax'])) {
				$this->data['fax'] = $this->request->post['fax'];
			} else if (isset($product_info)) {
				$this->data['fax'] = $product_info['fax'];
			} else {
				$this->data['fax'] = '';
			}
			
			if (isset($this->request->post['email'])) {
				$this->data['email'] = $this->request->post['email'];
			} else if (isset($product_info)) {
				$this->data['email'] = $product_info['email'];
			} else {
				$this->data['email'] = '';
			}
			
			if (isset($this->request->post['paypal_email'])) {
				$this->data['paypal_email'] = $this->request->post['paypal_email'];
			} else if (isset($product_info)) {
				$this->data['paypal_email'] = $product_info['paypal_email'];
			} else {
				$this->data['paypal_email'] = '';
			}
			
			if (isset($this->request->post['vendor_description'])) {
				$this->data['vendor_description'] = $this->request->post['vendor_description'];
			} else if (isset($product_info)) {
				$this->data['vendor_description'] = $product_info['vendor_description'];
			} else {
				$this->data['vendor_description'] = '';
			}
					
			if (isset($this->request->post['vendor_address'])) {
				$this->data['vendor_address'] = $this->request->post['vendor_address'];
			} else if (isset($product_info)) {
				$this->data['vendor_address'] = $product_info['address'];
			} else {
				$this->data['vendor_address'] = '';
			}
			
			
			if (isset($this->request->post['vendor_country_zone'])) {
				$this->data['vendor_country_zone'] = $this->request->post['vendor_country_zone'];
			} else if (isset($product_info)) {
				if (isset($product_info['country_id']) && isset($product_info['zone_id'])) {
					$this->load->model('localisation/zone');
					$zone = $this->model_localisation_zone->getZone((int)$product_info['zone_id']);
					if ($zone) {
						$vendor_zone = $zone['name'];
					} else {
						$vendor_zone =  $this->language->get('text_none');
					}
					
					$this->load->model('localisation/country');
					$country = $this->model_localisation_country->getCountry((int)$product_info['country_id']);
					$vendor_country = ', ' . $country['name'];
				} else {
					$vendor_zone = '';
					$vendor_country = '';
				}
				$this->data['vendor_country_zone'] = $vendor_zone . $vendor_country;
			} else {
				$this->data['vendor_country_zone'] = '';
			}
			
			if (isset($this->request->post['store_url'])) {
				$this->data['store_url'] = $this->request->post['store_url'];
			} else if (isset($product_info)) {
				$this->data['store_url'] = $product_info['store_url'];
			} else {
				$this->data['store_url'] = '';
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$this->data['sort_order'] = $product_info['sort_order'];
			]]></search>
			<add><![CDATA[
			$this->data['sort_order'] = $product_info['psort_order'];
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			if (isset($this->request->get['filter_name']) || isset($this->request->get['filter_model']) || isset($this->request->get['filter_category_id'])) {
			]]></search>
			<add><![CDATA[
			if (isset($this->request->get['filter_name']) || isset($this->request->get['filter_model']) || isset($this->request->get['filter_sku']) || isset($this->request->get['filter_category_id'])) {
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			if (isset($this->request->get['filter_category_id'])) {
			]]></search>
			<add><![CDATA[
			if (isset($this->request->get['filter_sku'])) {
				$filter_sku = $this->request->get['filter_sku'];
			} else {
				$filter_sku = '';
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			'filter_category_id'  => $filter_category_id,
			]]></search>
			<add><![CDATA[
			'filter_sku'          => $filter_sku,
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			'name'       => strip_tags(html_entity_decode($result['name'], ENT_QUOTES, 'UTF-8')),
			]]></search>
			<add><![CDATA[
			'sku'        => $result['sku'],
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after" offset="3"><![CDATA[
			$product_total = $this->model_catalog_product->getTotalProducts($data);
			]]></search>
			<add><![CDATA[
			$this->data['vendors'] = $this->model_catalog_product->getVendors($data);
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			public function autocomplete() {	
			]]></search>
			<add><![CDATA[
			public function vendor() {
				$this->load->model('catalog/product');
				
				if (isset($this->request->get['vendor_id'])) {
					$vendor_id = $this->request->get['vendor_id'];
				} else {
					$vendor_id = 0;
				}

				$results = $this->model_catalog_product->getVendorsByVendorId($vendor_id);

				$this->response->setOutput(json_encode($results));
			}	
			]]></add>
		</operation>
	</file>
	
	<!--Edit Common Header-->
	<file name="admin/controller/common/header.php">
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->data['text_product'] = $this->language->get('text_product'); 
			]]></search>
			<add><![CDATA[
			$this->data['text_vendor_tool'] = $this->language->get('text_vendor_tool');
			$this->data['text_add_vendors'] = $this->language->get('text_add_vendors');
			$this->data['text_add_courier'] = $this->language->get('text_add_courier');
			$this->data['text_pro2ven'] = $this->language->get('text_pro2ven');
			$this->data['text_vendor_sales'] = $this->language->get('text_vendor_sales');
			$this->data['text_vendor_transaction'] = $this->language->get('text_vendor_transaction');
			$this->data['text_payment_history'] = $this->language->get('text_payment_history');
			$this->data['text_vendor_sales_orders'] = $this->language->get('text_vendor_sales_orders');
			$this->data['text_vendor_report'] = $this->language->get('text_vendor_report');
			$this->data['text_setup'] = $this->language->get('text_setup');
			$this->data['text_vendor_setting'] = $this->language->get('text_vendor_setting');
			$this->data['text_vendor_commission'] = $this->language->get('text_vendor_commission');
			$this->data['text_package_limit'] = $this->language->get('text_package_limit');
			$this->data['text_vendor_personal'] = $this->language->get('text_vendor_personal');
			$this->data['text_vendor_update_profile'] = $this->language->get('text_vendor_update_profile');
			$this->data['text_vendor_update_password'] = $this->language->get('text_vendor_update_password');
			]]></add>
		</operation>
	
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->data['product'] = $this->url->link('catalog/product', 'token=' . $this->session->data['token'], 'SSL');
			]]></search>
			<add><![CDATA[
			$this->data['add_vendors'] = $this->url->link('catalog/vendor', 'token=' . $this->session->data['token'], 'SSL');
			$this->data['update_vendor_profile'] = $this->url->link('catalog/vendor_profile', 'token=' . $this->session->data['token'], 'SSL');
			$this->data['add_courier'] = $this->url->link('catalog/courier', 'token=' . $this->session->data['token'], 'SSL');
			$this->data['pro2ven'] = $this->url->link('catalog/pro2ven', 'token=' . $this->session->data['token'], 'SSL');
			$this->data['cat2ven'] = $this->url->link('catalog/cat2ven', 'token=' . $this->session->data['token'], 'SSL');
			$this->data['info2ven'] = $this->url->link('catalog/info2ven', 'token=' . $this->session->data['token'], 'SSL');
			$this->data['down2ven'] = $this->url->link('catalog/down2ven', 'token=' . $this->session->data['token'], 'SSL');
			$this->data['ven_setting'] = $this->url->link('catalog/vendor_setting', 'token=' . $this->session->data['token'], 'SSL');
			$this->data['ven_commission'] = $this->url->link('catalog/commission', 'token=' . $this->session->data['token'], 'SSL');
			$this->data['ven_limit'] = $this->url->link('catalog/prolimit', 'token=' . $this->session->data['token'], 'SSL');
			$this->data['ven_sale_order'] = $this->url->link('sale/vendor_order', 'token=' . $this->session->data['token'], 'SSL');
			$this->data['payment_history'] = $this->url->link('sale/payment_history', 'token=' . $this->session->data['token'], 'SSL');
			$this->data['ven_report'] = $this->url->link('report/vendor_sale_order', 'token=' . $this->session->data['token'], 'SSL');
			$this->data['ven_transaction'] = $this->url->link('report/vendor_transaction', 'token=' . $this->session->data['token'], 'SSL');
			$this->data['user_password'] = $this->url->link('user/user_password', 'token=' . $this->session->data['token'], 'SSL');
			$this->data['vendor_product_viewed'] = $this->url->link('report/pro2ven_viewed', 'token=' . $this->session->data['token'], 'SSL');
			$this->data['vendor_product_purchased'] = $this->url->link('report/pro2ven_purchased', 'token=' . $this->session->data['token'], 'SSL');
			]]></add>
		</operation>
	</file>
	
	<!--Edit Common Home-->
	<file name="admin/controller/common/home.php">
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->data['text_total_order'] = $this->language->get('text_total_order');
			]]></search>
			<add><![CDATA[
			$this->data['text_total_product'] = $this->language->get('text_total_product');
			$this->data['text_total_shipping'] = $this->language->get('text_total_shipping');
			$this->data['text_total_product_approval'] = $this->language->get('text_total_product_approval');
			$this->data['text_total_product_pendding'] = $this->language->get('text_total_product_pendding');
			$this->data['text_total_vendor_approval'] = $this->language->get('text_total_vendor_approval');
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			$this->load->model('sale/order');
			]]></search>
			<add><![CDATA[
			if ($this->user->getVP()) {
			
			$this->load->model('report/vendor_transaction');
			$this->data['total_shipping'] = $this->currency->format($this->model_report_vendor_transaction->getHomeShipping(),$this->config->get('config_currency'));
			
			$this->load->model('sale/vendor_order');
			$this->data['total_sale'] = $this->currency->format($this->model_sale_vendor_order->getVendorTotalSales() + $this->model_report_vendor_transaction->getHomeShipping(),$this->config->get('config_currency'));
			$this->data['total_sale_year'] = $this->currency->format($this->model_sale_vendor_order->getVendorTotalSalesByYear(date('Y')) + $this->model_report_vendor_transaction->getHomeShippingByYear(date('Y')), $this->config->get('config_currency'));
			$this->data['total_order'] = $this->model_sale_vendor_order->getTotalOrders(0);
			
			$this->load->model('catalog/pro2ven');
			$this->data['total_product'] = $this->model_catalog_pro2ven->getTotalProducts(0);
			
			$this->load->model('catalog/pro2ven');
			$this->data['total_product_pendding'] = $this->model_catalog_pro2ven->getTotalWaitingApprovalProduct();
			$this->data['view_product_pendding'] = $this->url->link('catalog/pro2ven', 'token=' . $this->session->data['token'] . '&filter_status=5', 'SSL');
			
			} else {
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->data['total_affiliate_approval'] = $this->model_sale_affiliate->getTotalAffiliatesAwaitingApproval();
			]]></search>
			<add><![CDATA[
			$this->load->model('catalog/product');
		
			$this->data['total_product_approval'] = $this->model_catalog_product->getTotalWaitingApprovalProduct();
			$this->data['view_product_approval'] = $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . '&filter_status=5', 'SSL');
			
			$this->load->model('user/user');
			$this->data['total_vendor_approval'] = $this->model_user_user->getUserAwaitingApproval();
			$this->data['view_vendor_approval'] = $this->url->link('user/user', 'token=' . $this->session->data['token'] . '&filter_status=5', 'SSL');
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			$results = $this->model_sale_order->getOrders($data);
			]]></search>
			<add><![CDATA[
			if ($this->user->getVP()) {
			$results = $this->model_sale_vendor_order->getOrders($data);
			
			foreach ($results as $result) {
				$action = array();
				 
				$action[] = array(
					'text' => $this->language->get('text_view'),
					'href' => $this->url->link('sale/vendor_order/info', 'token=' . $this->session->data['token'] . '&order_id=' . $result['order_id'], 'SSL')
				);
				
				$status = $this->model_sale_vendor_order->getVendorLastUpdate($result['order_id']);
				if ($status) {
					$status = $status;
				} else {
					$status = $result['status'];
				}
						
				$this->data['orders'][] = array(
					'order_id'   => $result['order_id'],
					'customer'   => $result['customer'],
					'status'     => $status,
					'date_added' => date($this->language->get('date_format_short'), strtotime($result['date_added'])),
					'total'      => $this->currency->format($result['total'] + $result['shipping_cost'] + ($this->config->get('tax_status') ? ($result['shipping_tax'] + $result['tax']) : 0), $result['currency_code'], $result['currency_value']),
					'action'     => $action
				);
			}
		
			} else {
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			if ($this->config->get('config_currency_auto')) {
			]]></search>
			<add><![CDATA[
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$query = $this->db->query("SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND (DATE(date_added) = DATE(NOW()) AND HOUR(date_added) = '" . (int)$i . "') GROUP BY HOUR(date_added) ORDER BY date_added ASC");
			]]></search>
			<add><![CDATA[
			if (!$this->user->getVP()) {
				$query = $this->db->query("SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND (DATE(date_added) = DATE(NOW()) AND HOUR(date_added) = '" . (int)$i . "') GROUP BY HOUR(date_added) ORDER BY date_added ASC");
			} else {
				$query = $this->db->query("SELECT COUNT(DISTINCT (o.order_id)) AS total FROM `" . DB_PREFIX . "order` o LEFT JOIN `" . DB_PREFIX . "order_product` op ON (o.order_id = op.order_id) WHERE o.order_status_id > '0' AND op.vendor_id = '" . (int)$this->user->getVP() . "' AND (DATE(o.date_added) = DATE(NOW()) AND HOUR(o.date_added) = '" . (int)$i . "') GROUP BY HOUR(o.date_added) ORDER BY o.date_added ASC");
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$query = $this->db->query("SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND DATE(date_added) = '" . $this->db->escape($date) . "' GROUP BY DATE(date_added)");
			]]></search>
			<add><![CDATA[
			if (!$this->user->getVP()) {
				$query = $this->db->query("SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND DATE(date_added) = '" . $this->db->escape($date) . "' GROUP BY DATE(date_added)");
			} else {
				$query = $this->db->query("SELECT COUNT(DISTINCT (o.order_id)) AS total FROM `" . DB_PREFIX . "order` o LEFT JOIN `" . DB_PREFIX . "order_product` op ON (o.order_id = op.order_id) WHERE o.order_status_id > '0' AND op.vendor_id = '" . (int)$this->user->getVP() . "' AND DATE(o.date_added) = '" . $this->db->escape($date) . "' GROUP BY DATE(o.date_added)");
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$query = $this->db->query("SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND (DATE(date_added) = '" . $this->db->escape($date) . "') GROUP BY DAY(date_added)");
			]]></search>
			<add><![CDATA[
			if (!$this->user->getVP()) {
				$query = $this->db->query("SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND (DATE(date_added) = '" . $this->db->escape($date) . "') GROUP BY DAY(date_added)");
			} else {
				$query = $this->db->query("SELECT COUNT(DISTINCT (o.order_id)) AS total FROM `" . DB_PREFIX . "order` o LEFT JOIN `" . DB_PREFIX . "order_product` op ON (o.order_id = op.order_id) WHERE o.order_status_id > '0' AND op.vendor_id = '" . (int)$this->user->getVP() . "' AND (DATE(o.date_added) = '" . $this->db->escape($date) . "') GROUP BY DAY(o.date_added)");					
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$query = $this->db->query("SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND YEAR(date_added) = '" . date('Y') . "' AND MONTH(date_added) = '" . $i . "' GROUP BY MONTH(date_added)");
			]]></search>
			<add><![CDATA[
			if (!$this->user->getVP()) {
				$query = $this->db->query("SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "order` WHERE order_status_id > '0' AND YEAR(date_added) = '" . date('Y') . "' AND MONTH(date_added) = '" . $i . "' GROUP BY MONTH(date_added)");
			} else {
				$query = $this->db->query("SELECT COUNT(DISTINCT (o.order_id)) AS total FROM `" . DB_PREFIX . "order` o LEFT JOIN `" . DB_PREFIX . "order_product` op ON (o.order_id = op.order_id) WHERE o.order_status_id > '0' AND op.vendor_id = '" . (int)$this->user->getVP() . "' AND YEAR(o.date_added) = '" . date('Y') . "' AND MONTH(o.date_added) = '" . $i . "' GROUP BY MONTH(o.date_added)");
			}
			]]></add>
		</operation>
	</file>
	
	<file name="admin/controller/common/filemanager.php">
		<operation error="skip">
			<search position="replace"><![CDATA[
			$this->data['directory'] = HTTP_IMAGE . 'data/';
			]]></search>
			<add><![CDATA[
			$this->data['directory'] = HTTP_IMAGE . 'data/' . $this->user->getStorePath(); 
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$directories = glob(rtrim(DIR_IMAGE . 'data/' . str_replace('../', '', $this->request->post['directory']), '/') . '/*', GLOB_ONLYDIR);
			]]></search>
			<add><![CDATA[
			$directories = glob(rtrim(DIR_IMAGE . 'data/' . $this->user->getStorePath() . str_replace('../', '', $this->request->post['directory']), '/') . '/*', GLOB_ONLYDIR); 
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$json[$i]['attributes']['directory'] = utf8_substr($directory, strlen(DIR_IMAGE . 'data/'));
			]]></search>
			<add><![CDATA[
			$json[$i]['attributes']['directory'] = utf8_substr($directory, strlen(DIR_IMAGE . 'data/' . $this->user->getStorePath()));
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$directory = DIR_IMAGE . 'data/' . str_replace('../', '', $this->request->post['directory']);
			]]></search>
			<add><![CDATA[
			$directory = DIR_IMAGE . 'data/' . $this->user->getStorePath() . str_replace('../', '', $this->request->post['directory']);
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$directory = DIR_IMAGE . 'data/';
			]]></search>
			<add><![CDATA[
			$directory = DIR_IMAGE . 'data/' . $this->user->getStorePath();
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$directory = rtrim(DIR_IMAGE . 'data/' . str_replace('../', '', $this->request->post['directory']), '/');		
			]]></search>
			<add><![CDATA[
			$directory = rtrim(DIR_IMAGE . 'data/' . $this->user->getStorePath() . str_replace('../', '', $this->request->post['directory']), '/');		
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			$path = rtrim(DIR_IMAGE . 'data/' . str_replace('../', '', html_entity_decode($this->request->post['path'], ENT_QUOTES, 'UTF-8')), '/');
			]]></search>
			<add><![CDATA[
			if (preg_match('/\./', $this->request->post['path'])) {
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			$path = rtrim(DIR_IMAGE . 'data/' . str_replace('../', '', html_entity_decode($this->request->post['path'], ENT_QUOTES, 'UTF-8')), '/');
			]]></search>
			<add><![CDATA[
			} else {
				$path = rtrim(DIR_IMAGE . 'data/' . $this->user->getStorePath() . str_replace('../', '', html_entity_decode($this->request->post['path'], ENT_QUOTES, 'UTF-8')), '/');
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			if ($path == rtrim(DIR_IMAGE . 'data/', '/')) {
			]]></search>
			<add><![CDATA[
			if ($path == rtrim(DIR_IMAGE . 'data/' . $this->user->getStorePath(), '/')) {
			]]></add>
		</operation>
		
		<!--file manager - move -->
		<operation error="skip">
			<search position="before"><![CDATA[
			$from = rtrim(DIR_IMAGE . 'data/' . str_replace('../', '', html_entity_decode($this->request->post['from'], ENT_QUOTES, 'UTF-8')), '/');
			]]></search>
			<add><![CDATA[
			if (preg_match('/\./', $this->request->post['from'])) {
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			$from = rtrim(DIR_IMAGE . 'data/' . str_replace('../', '', html_entity_decode($this->request->post['from'], ENT_QUOTES, 'UTF-8')), '/');
			]]></search>
			<add><![CDATA[
			} else {
				$from = rtrim(DIR_IMAGE . 'data/' . $this->user->getStorePath() . str_replace('../', '', html_entity_decode($this->request->post['from'], ENT_QUOTES, 'UTF-8')), '/');
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$to = rtrim(DIR_IMAGE . 'data/' . str_replace('../', '', html_entity_decode($this->request->post['to'], ENT_QUOTES, 'UTF-8')), '/');
			]]></search>
			<add><![CDATA[
			$to = rtrim(DIR_IMAGE . 'data/' . $this->user->getStorePath() . str_replace('../', '', html_entity_decode($this->request->post['to'], ENT_QUOTES, 'UTF-8')), '/');
			]]></add>
		</operation>
		
		<!--file manager - copy -->
		<operation error="skip">
			<search position="before"><![CDATA[
			if (!file_exists($old_name) || $old_name == DIR_IMAGE . 'data') {
			]]></search>
			<add><![CDATA[
			if (preg_match('/\./', $this->request->post['path'])) {
				$old_name = rtrim(DIR_IMAGE . 'data/' . str_replace('../', '', html_entity_decode($this->request->post['path'], ENT_QUOTES, 'UTF-8')), '/');
			} else {
				$old_name = rtrim(DIR_IMAGE . 'data/' . $this->user->getStorePath() . str_replace('../', '', html_entity_decode($this->request->post['path'], ENT_QUOTES, 'UTF-8')), '/');
			}]]></add>
		</operation>
		<!--file manager - folders -->
		<operation error="skip">
			<search position="replace"><![CDATA[
			$this->response->setOutput($this->recursiveFolders(DIR_IMAGE . 'data/'));	
			]]></search>
			<add><![CDATA[
			$this->response->setOutput($this->recursiveFolders(DIR_IMAGE . 'data/' . $this->user->getStorePath()));	
			]]></add>
		</operation>
		
		<!--file manager - recursiveFolders -->
		<operation error="skip">
			<search position="replace"><![CDATA[
			$output .= '<option value="' . utf8_substr($directory, strlen(DIR_IMAGE . 'data/')) . '">' . utf8_substr($directory, strlen(DIR_IMAGE . 'data/')) . '</option>';
			]]></search>
			<add><![CDATA[
			$output .= '<option value="' . utf8_substr($directory, strlen(DIR_IMAGE . 'data/' . $this->user->getStorePath())) . '">' . utf8_substr($directory, strlen(DIR_IMAGE . 'data/' . $this->user->getStorePath())) . '</option>';
			]]></add>
		</operation>
		
		<!--file manager - recursiveFolders -->
		<operation error="skip">
			<search position="replace"><![CDATA[
			$old_name = rtrim(DIR_IMAGE . 'data/' . str_replace('../', '', html_entity_decode($this->request->post['path'], ENT_QUOTES, 'UTF-8')), '/');
			]]></search>
			<add><![CDATA[
			if (preg_match('/\./', $this->request->post['path'])) {
				$old_name = rtrim(DIR_IMAGE . 'data/' . str_replace('../', '', html_entity_decode($this->request->post['path'], ENT_QUOTES, 'UTF-8')), '/');
			} else {
				$old_name = rtrim(DIR_IMAGE . 'data/' . $this->user->getStorePath() . str_replace('../', '', html_entity_decode($this->request->post['path'], ENT_QUOTES, 'UTF-8')), '/');
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			if (!file_exists($old_name) || $old_name == DIR_IMAGE . 'data') {
			]]></search>
			<add><![CDATA[
			if (!file_exists($old_name) || $old_name == DIR_IMAGE . 'data/' . $this->user->getStorePath()) {
			]]></add>
		</operation>
		
		<!--file manager - upload -->
		<operation error="skip">
			<search position="replace"><![CDATA[
			$directory = rtrim(DIR_IMAGE . 'data/' . str_replace('../', '', $this->request->post['directory']), '/');
			]]></search>
			<add><![CDATA[
			$directory = rtrim(DIR_IMAGE . 'data/' . $this->user->getStorePath() . str_replace('../', '', $this->request->post['directory']), '/');
			]]></add>
		</operation>
	</file>
	
	<file name="admin/controller/sale/order.php">
		<operation error="skip">
			<search position="after" index="2"><![CDATA[
			$this->data['entry_comment'] = $this->language->get('entry_comment');
			]]></search>
			<add><![CDATA[
			$this->data['entry_sent_comment_to_all'] = $this->language->get('entry_sent_comment_to_all');
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->model_sale_order->addOrderHistory($this->request->get['order_id'], $this->request->post);
			]]></search>
			<add><![CDATA[
			$this->model_sale_order->UpdateAllMultiVendorOrderStatus($this->request->get['order_id'], $this->request->post);
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			$results = $this->model_sale_order->getOrderHistories($this->request->get['order_id'], ($page - 1) * 10, 10);
      		]]></search>
			<add><![CDATA[
			$this->load->model('catalog/vendor');
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			$this->data['histories'][] = array(
      		]]></search>
			<add><![CDATA[
			$vendor_info = $this->model_catalog_vendor->getVendor($result['vendor_id']);
			if (!empty($vendor_info)) {
				$vendor_name = $vendor_info['vendor_name'];
			} else {
				$vendor_name = $this->language->get('text_default_store');
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			'status'     => $result['status'],
      		]]></search>
			<add><![CDATA[
			'status'     => $result['status'] . ' - ' . $vendor_name,
			]]></add>
		</operation>
	</file>
	
	<file name="admin/controller/user/user.php">
		<operation error="skip">
			<search position="before"><![CDATA[
			$this->model_user_user->addUser($this->request->post);
			]]></search>
			<add><![CDATA[
			if (!file_exists(rtrim(DIR_IMAGE . 'data/', '/') . '/' . str_replace('../', '', $this->request->post['username'])) && (isset($this->request->post['generate_path']))) {
				mkdir(rtrim(DIR_IMAGE . 'data/', '/') . '/' . str_replace('../', '', $this->request->post['username']), 0777);
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			$this->model_user_user->editUser($this->request->get['user_id'], $this->request->post);
			]]></search>
			<add><![CDATA[
			if (file_exists(rtrim(DIR_IMAGE . 'data/', '/') . '/' . str_replace('../', '', $this->request->post['username'])) && (isset($this->request->post['remove_path']))) {
				$this->recursiveDelete(rtrim(DIR_IMAGE . 'data/', '/') . '/' . str_replace('../', '', $this->request->post['username']));
			} elseif (!file_exists(rtrim(DIR_IMAGE . 'data/', '/') . '/' . str_replace('../', '', $this->request->post['username'])) && (isset($this->request->post['generate_path']))) {
				mkdir(rtrim(DIR_IMAGE . 'data/', '/') . '/' . str_replace('../', '', $this->request->post['username']), 0777);
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before" index="5"><![CDATA[
			if (isset($this->request->get['sort'])) {
			]]></search>
			<add><![CDATA[
			if (isset($this->request->get['filter_status'])) {
				$url .= '&filter_status=' . $this->request->get['filter_status'];
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			private function getList() {
			]]></search>
			<add><![CDATA[
			if (isset($this->request->get['filter_status'])) {
				$filter_status = $this->request->get['filter_status'];
			} else {
				$filter_status = null;
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			$this->data['users'][] = array(
			]]></search>
			<add><![CDATA[
			if ($result['status'] == 5) {
				$status = $this->language->get('txt_pending_approval');
			} elseif ($result['status']) {
				$status = $this->language->get('text_enabled');
			} else {
				$status = $this->language->get('text_disabled');
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			'status'     => ($result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled')),
			]]></search>
			<add><![CDATA[
			'status'     => $status,
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->data['button_cancel'] = $this->language->get('button_cancel');
			]]></search>
			<add><![CDATA[
			$this->data['entry_folder_path'] = $this->language->get('entry_folder_path');
			$this->data['entry_folder_path_remove'] = $this->language->get('entry_folder_path_remove');
			$this->data['entry_vendor'] = $this->language->get('entry_vendor');
			$this->data['entry_category'] = $this->language->get('entry_category');
			$this->data['entry_store'] = $this->language->get('entry_store');
			$this->data['text_none'] = $this->language->get('text_none');
			$this->data['text_default'] = $this->language->get('text_default');
			$this->data['text_select_all'] = $this->language->get('text_select_all');
			$this->data['text_unselect_all'] = $this->language->get('text_unselect_all');
			$this->data['text_remove'] = $this->language->get('text_remove');
			$this->data['txt_pending_approval'] = $this->language->get('txt_pending_approval');
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			$this->load->model('user/user_group');
			]]></search>
			<add><![CDATA[
			$this->load->model('user/user');
			$this->data['vendor_List'] = $this->model_user_user->getVendors();
			
			$this->load->model('catalog/category');
			$this->data['categories'] = $this->model_catalog_category->getCategories(0);
			
			$this->load->model('setting/store');		
			$this->data['stores'] = $this->model_setting_store->getStores();
			
			if (isset($this->request->post['vendor_product'])) {
				$this->data['vendor_product'] = $this->request->post['vendor_product'];
			} elseif (!empty($user_info)) {
				$this->data['vendor_product'] = $user_info['vendor_permission'];
			} else { 
				$this->data['vendor_product'] = '';
			}
			
			if (isset($user_info['cat_permission'])) {
				$cat_permission = unserialize($user_info['cat_permission']);
			} else {
				$cat_permission = '';
			}		
			
			if (isset($this->request->post['vendor_category'])) {
				$this->data['vendor_category'] = $this->request->post['vendor_category'];
			} elseif (isset($cat_permission)) {
				$this->data['vendor_category'] = $cat_permission;
			} else { 
				$this->data['vendor_category'] = array();
			}
			
			if (isset($user_info['store_permission'])) {
				$store_permission = unserialize($user_info['store_permission']);
			} else {
				$store_permission = '';
			}
			
			if (isset($this->request->post['product_store'])) {
				$this->data['product_store'] = $this->request->post['product_store'];
			} elseif (isset($store_permission)) {
				$this->data['product_store'] = $store_permission;
			} else {
				$this->data['product_store'] = array();
			}	
			
			if (isset($user_info['folder'])) {
				$this->data['folder_path'] = $user_info['folder'];
			} else {
				$this->data['folder_path'] = '';
			}
			]]></add>
		</operation>
		<operation error="skip">
			<search position="before"><![CDATA[
			private function validateDelete() { 
			]]></search>
			<add><![CDATA[
			Private function recursiveDelete($directory) {
				if (is_dir($directory)) {
					$handle = opendir($directory);
				}
				
				if (!$handle) {
					return false;
				}
				
				while (false !== ($file = readdir($handle))) {
					if ($file != '.' && $file != '..') {
						if (!is_dir($directory . '/' . $file)) {
							unlink($directory . '/' . $file);
						} else {
							$this->recursiveDelete($directory . '/' . $file);
						}
					}
				}
				
				closedir($handle);
				
				rmdir($directory);
				
				return true;
			}
			]]></add>
		</operation>
	</file>
	
	<file name="admin/language/english/catalog/product.php">
		<operation error="skip">
			<search position="after"><![CDATA[
			$_['column_model']           = 'Model';
			]]></search>
			<add><![CDATA[
			$_['column_vendor']          				= 'Vendor Name';
			$_['column_sku']           	 				= 'Sku';
			$_['entry_vendor_country_origin']			= 'Country Origin:<br /><span class="help">Item shipped from origin country.</span>';
			$_['entry_vendor_product_cost']  			= 'Product Cost:';
			$_['entry_vendor_shipping_method']      	= 'Included Shipping:<br /><span class="help">Shipping method included by dropshipper</span>';
			$_['entry_vendor_prefered_shipping_method'] = 'Prefered Shipping Method:<br /><span class="help">Your prefered shipping method</span>';
			$_['entry_vendor_shipping_cost'] 			= 'Shipping Cost:';
			$_['entry_vendor_total']    				= 'Total:<br /><span class="help">Product Cost + Shipping Cost<br />The product cost used for profit reporting</span>';
			$_['entry_vendor_company']       			= 'Company Name:';
			$_['entry_vendor_contact_name']  			= 'Contact Name:';
			$_['entry_vendor_telephone']     			= 'Telephone:';
			$_['entry_vendor_fax']     		 			= 'Fax:';
			$_['entry_vendor_email']         			= 'Email:';
			$_['entry_vendor_paypal_email']  			= 'Paypal Email:';
			$_['entry_vendor_description']   			= 'Description:';
			$_['entry_vendor_address']       			= 'Address:';
			$_['entry_vendor_country_zone']       		= 'Region / State, Country:';
			$_['entry_vendor_store_url']     			= 'Store Url:';
			$_['entry_vendor_product_url']   			= 'Product Url:';
			$_['entry_vendor_name']  		 			= 'Vendor Name:';
			$_['entry_vendor_wholesale']     			= 'Wholesale:';
			$_['tab_vendor']           	 	 			= 'Vendor';
			$_['heading_pro2ven_title']  	 			= 'Products By Vendor'; 
			$_['txt_pending_approval']  	 			= 'Pending Approval'; 
			$_['error_max_warning']          			= 'Warning: You have reach the maximum products!'; 
			]]></add>
		</operation>
	</file>
	
	<file name="admin/language/english/catalog/download.php">
		<operation error="skip">
			<search position="after"><![CDATA[
			$_['column_action']    = 'Action';
			]]></search>
			<add><![CDATA[
			$_['entry_vendor_name']= 'Vendor Name:';
			]]></add>
		</operation>
	</file>
	
	<file name="admin/language/english/catalog/information.php">
		<operation error="skip">
			<search position="after"><![CDATA[
			$_['entry_layout']      = 'Layout Override:';
			]]></search>
			<add><![CDATA[
			$_['entry_vendor_name']= 'Vendor Name:';
			]]></add>
		</operation>
	</file>
	
	<file name="admin/language/english/common/header.php">
		<operation error="skip">
			<search position="after"><![CDATA[
			$_['text_product']                     = 'Products';
			]]></search>
			<add><![CDATA[
			$_['text_vendor_tool']       		   = 'Vendors';
			$_['text_pro2ven']      	 		   = 'Vendor Products';
			$_['text_add_vendors']       	       = 'Manage Vendors';
			$_['text_add_courier']       		   = 'Manage Couriers';
			$_['text_vendor_sales']      	   	   = 'Sales';
			$_['text_vendor_sales_orders']         = 'Orders';
			$_['text_vendor_report']      	   	   = 'Reports';
			$_['text_vendor_transaction']      	   = 'Transactions';
			$_['text_payment_history']      	   = 'Payment History';
			$_['text_setup']       		   		   = 'Setup';
			$_['text_vendor_setting']      		   = 'Global Vendor Setting';
			$_['text_vendor_commission']      	   = 'Commissions';
			$_['text_package_limit']      	   	   = 'Product Limit';
			$_['text_vendor_personal']      	   = 'Personal Details';
			$_['text_vendor_update_profile']   	   = 'Update Profile';
			$_['text_vendor_update_password']      = 'Change Password';
			]]></add>
		</operation>
	</file>
	
	<file name="admin/language/english/common/home.php">
		<operation error="skip">
			<search position="after"><![CDATA[
			$_['text_customer']                 = 'Total Customers';
			]]></search>
			<add><![CDATA[
			$_['text_total_product']            = 'Total Products:';
			$_['text_total_shipping']           = 'Total Shipping Charges:';
			$_['text_total_product_approval']   = 'Products Awaiting Approval:';
			$_['text_total_product_pendding']   = 'Products Pendding Approval:';
			$_['text_total_vendor_approval']    = 'Vendors Account Awaiting Approval:';
			]]></add>
		</operation>
	</file>
	
	<file name="admin/language/english/sale/order.php">
		<operation error="skip">
			<search position="after"><![CDATA[
			$_['entry_reward']                            = 'Reward:';
			]]></search>
			<add><![CDATA[
			$_['entry_sent_comment_to_all']               = 'Sent All Comments:<br /><span class="help"><b>Notify Customer</b> is required</span>';
			$_['text_default_store']                      = 'Default Store';
			]]></add>
		</operation>
	</file>
	
	<file name="admin/language/english/user/user.php">
		<operation error="skip">
			<search position="after"><![CDATA[
			$_['entry_captcha']    = 'Enter the code in the box below:';
			]]></search>
			<add><![CDATA[
			$_['text_none']                 = ' --- None --- ';
			$_['heading_title_password']    = 'Change Password';
			$_['entry_folder_path']     	= 'Folder Path:<br /><span class="help">Generate a folder and limit all files upload within this folder only.</span>';
			$_['entry_folder_path_remove']  = 'Folder Path:<br /><span class="help">Remove this folder will deleted all files reside in this folder.</span>';
			$_['entry_vendor']     			= 'Vendors Name:';
			$_['entry_category']   			= 'Categories Permission:';
			$_['entry_store']      			= 'Store Permission:';
			$_['text_change_password'] 		= 'Success: Password change completed !';
			$_['text_remove']               = 'Remove Folder Name: ';
			$_['txt_pending_approval']  	= 'Pending Approval'; 
			]]></add>
		</operation>
	</file>
	
	<file name="admin/model/catalog/download.php">
		<operation error="skip">
			<search position="replace"><![CDATA[
			$this->db->query("INSERT INTO " . DB_PREFIX . "download SET filename = '" . $this->db->escape($data['filename']) . "', mask = '" . $this->db->escape($data['mask']) . "', remaining = '" . (int)$data['remaining'] . "', date_added = NOW()");
			]]></search>
			<add><![CDATA[
			$this->db->query("INSERT INTO " . DB_PREFIX . "download SET filename = '" . $this->db->escape($data['filename']) . "', vendor_id = '" . (int)$data['vendor'] . "', mask = '" . $this->db->escape($data['mask']) . "', remaining = '" . (int)$data['remaining'] . "', date_added = NOW()");
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$this->db->query("UPDATE " . DB_PREFIX . "download SET filename = '" . $this->db->escape($data['filename']) . "', mask = '" . $this->db->escape($data['mask']) . "', remaining = '" . (int)$data['remaining'] . "' WHERE download_id = '" . (int)$download_id . "'");
			]]></search>
			<add><![CDATA[
			$this->db->query("UPDATE " . DB_PREFIX . "download SET filename = '" . $this->db->escape($data['filename']) . "', mask = '" . $this->db->escape($data['mask']) . "', vendor_id = '" . (int)$data['vendor'] . "', remaining = '" . (int)$data['remaining'] . "' WHERE download_id = '" . (int)$download_id . "'");
			]]></add>
		</operation>
	</file>
	
	<file name="admin/model/catalog/information.php">
		<operation error="skip">
			<search position="replace"><![CDATA[
			$this->db->query("INSERT INTO " . DB_PREFIX . "information SET sort_order = '" . (int)$data['sort_order'] . "', bottom = '" . (isset($data['bottom']) ? (int)$data['bottom'] : 0) . "', status = '" . (int)$data['status'] . "'");
			]]></search>
			<add><![CDATA[
			$this->db->query("INSERT INTO " . DB_PREFIX . "information SET sort_order = '" . (int)$data['sort_order'] . "', vendor_id = '" . (int)$data['vendor_id'] . "', bottom = '" . (isset($data['bottom']) ? (int)$data['bottom'] : 0) . "', status = '" . (int)$data['status'] . "'");
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$this->db->query("UPDATE " . DB_PREFIX . "information SET sort_order = '" . (int)$data['sort_order'] . "', bottom = '" . (isset($data['bottom']) ? (int)$data['bottom'] : 0) . "', status = '" . (int)$data['status'] . "' WHERE information_id = '" . (int)$information_id . "'");
			]]></search>
			<add><![CDATA[
			$this->db->query("UPDATE " . DB_PREFIX . "information SET sort_order = '" . (int)$data['sort_order'] . "', vendor_id = '" . (int)$data['vendor_id'] . "', bottom = '" . (isset($data['bottom']) ? (int)$data['bottom'] : 0) . "', status = '" . (int)$data['status'] . "' WHERE information_id = '" . (int)$information_id . "'");
			]]></add>
		</operation>
	</file>

	<file name="admin/model/catalog/product.php">
		<operation error="skip">
			<search position="after"><![CDATA[
			$product_id = $this->db->getLastId();
			]]></search>
			<add><![CDATA[
			$this->db->query("INSERT INTO " . DB_PREFIX . "vendor SET  vproduct_id = '" . (int)$product_id . "', ori_country = '" . (int)$data['ori_country'] . "', product_cost = '" . (float)$data['product_cost'] . "', shipping_method = '" . (int)$data['shipping_method'] . "', prefered_shipping = '" . (int)$data['prefered_shipping'] . "', shipping_cost = '" . (float)$data['shipping_cost'] . "', vtotal = '" . (float)$data['vtotal'] . "', product_url = '" . $this->db->escape($data['product_url']) . "', vendor = '" . (int)$data['vendor'] . "', wholesale = '" . $this->db->escape($data['wholesale']) . "', date_add = NOW()");
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->db->query("UPDATE " . DB_PREFIX . "product SET model = '" . $this->db->escape($data['model']) . "', sku = '" . $this->db->escape($data['sku']) . "', upc = '" . $this->db->escape($data['upc']) . "', ean = '" . $this->db->escape($data['ean']) . "', jan = '" . $this->db->escape($data['jan']) . "', isbn = '" . $this->db->escape($data['isbn']) . "', mpn = '" . $this->db->escape($data['mpn']) . "', location = '" . $this->db->escape($data['location']) . "', quantity = '" . (int)$data['quantity'] . "', minimum = '" . (int)$data['minimum'] . "', subtract = '" . (int)$data['subtract'] . "', stock_status_id = '" . (int)$data['stock_status_id'] . "', date_available = '" . $this->db->escape($data['date_available']) . "', manufacturer_id = '" . (int)$data['manufacturer_id'] . "', shipping = '" . (int)$data['shipping'] . "', price = '" . (float)$data['price'] . "', points = '" . (int)$data['points'] . "', weight = '" . (float)$data['weight'] . "', weight_class_id = '" . (int)$data['weight_class_id'] . "', length = '" . (float)$data['length'] . "', width = '" . (float)$data['width'] . "', height = '" . (float)$data['height'] . "', length_class_id = '" . (int)$data['length_class_id'] . "', status = '" . (int)$data['status'] . "', tax_class_id = '" . $this->db->escape($data['tax_class_id']) . "', sort_order = '" . (int)$data['sort_order'] . "', date_modified = NOW() WHERE product_id = '" . (int)$product_id . "'");
			]]></search>
			<add><![CDATA[
			$this->db->query("DELETE FROM " . DB_PREFIX . "vendor WHERE vproduct_id = '" . (int)$product_id . "'");
			$this->db->query("INSERT INTO " . DB_PREFIX . "vendor SET  vproduct_id = '" . (int)$product_id . "', ori_country = '" . (int)$data['ori_country'] . "', product_cost = '" . (float)$data['product_cost'] . "', shipping_method = '" . (int)$data['shipping_method'] . "', prefered_shipping = '" . (int)$data['prefered_shipping'] . "', shipping_cost = '" . (float)$data['shipping_cost'] . "', vtotal = '" . (float)$data['vtotal'] . "', product_url = '" . $this->db->escape($data['product_url']) . "', vendor = '" . (int)$data['vendor'] . "', wholesale = '" . $this->db->escape($data['wholesale']) . "', date_add = NOW()");
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$query = $this->db->query("SELECT DISTINCT * FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) WHERE p.product_id = '" . (int)$product_id . "' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "'");
			]]></search>
			<add><![CDATA[
			$query = $this->db->query("SELECT DISTINCT *, p.sort_order as psort_order FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "vendor vd ON (pd.product_id = vd.vproduct_id) LEFT JOIN " . DB_PREFIX . "vendors vds ON (vd.vendor = vds.vendor_id) WHERE p.product_id = '" . (int)$product_id . "' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "'");
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			$data['status'] = '0';
			]]></search>
			<add><![CDATA[
			$data['sort_order'] = $query->row['psort_order'];
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->db->query("DELETE FROM " . DB_PREFIX . "product WHERE product_id = '" . (int)$product_id . "'");
			]]></search>
			<add><![CDATA[
			$this->db->query("DELETE FROM " . DB_PREFIX . "vendor WHERE vproduct_id = '" . (int)$product_id . "'");
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$query = $this->db->query("SELECT DISTINCT *, (SELECT keyword FROM " . DB_PREFIX . "url_alias WHERE query = 'product_id=" . (int)$product_id . "') AS keyword FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) WHERE p.product_id = '" . (int)$product_id . "' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "'");
			]]></search>
			<add><![CDATA[
			$query = $this->db->query("SELECT DISTINCT *, p.sort_order AS psort_order, CONCAT(vds.firstname, ' ', vds.lastname) AS vname, CONCAT(vds.address_1, ',', vds.address_2, ',' , vds.city, ',', vds.postcode) AS address,(SELECT keyword FROM " . DB_PREFIX . "url_alias WHERE query = 'product_id=" . (int)$product_id . "') AS keyword FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "vendor vd ON (pd.product_id = vd.vproduct_id) LEFT JOIN " . DB_PREFIX . "vendors vds ON (vd.vendor = vds.vendor_id) WHERE p.product_id = '" . (int)$product_id . "' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "'");
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$sql = "SELECT * FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id)";
			]]></search>
			<add><![CDATA[
			$sql = "SELECT * FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "vendor vd ON (pd.product_id = vd.vproduct_id) LEFT JOIN " . DB_PREFIX . "vendors vds ON (vd.vendor = vds.vendor_id)"; 
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			if (!empty($data['filter_price'])) {
			]]></search>
			<add><![CDATA[
			if (!empty($data['filter_sku'])) {
				$sql .= " AND LCASE(p.sku) LIKE '" . $this->db->escape(utf8_strtolower($data['filter_sku'])) . "%'";
			}
			
			if (isset($data['filter_vendor']) && !is_null($data['filter_vendor'])) {
				$sql .= " AND vd.vendor = '" . (int)$data['filter_vendor'] . "'";
			}
			
			if (isset($data['filter_vendor_name']) && !is_null($data['filter_vendor_name'])) {
				$sql .= " AND vds.vendor_id = '" . (int)$data['filter_vendor_name'] . "'";
			}
			]]></add>
		</operation>

		<operation error="skip">
			<search position="after"><![CDATA[
			'p.model',
			]]></search>
			<add><![CDATA[
			'p.sku',
			'vds.vendor_id',
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) WHERE pd.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY pd.name ASC");
			]]></search>
			<add><![CDATA[
			$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "vendor vd ON (pd.product_id = vd.vproduct_id) LEFT JOIN " . DB_PREFIX . "vendors vds ON (vd.vendor = vds.vendor_id) WHERE pd.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY pd.name ASC");
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			public function getProductDescriptions($product_id) {
			]]></search>
			<add><![CDATA[
			public function getVendorsByVendorId($vendor_id) {
				$data = array();
				$query = $this->db->query("SELECT *, CONCAT(v.firstname, ' ',v.lastname) AS vname, CONCAT(v.address_1, ',', v.address_2, ',' , v.city, ',', v.postcode) AS address FROM " . DB_PREFIX . "vendors v WHERE v.vendor_id = '" . (int)$vendor_id . "'");
				$data = $query->row;
				
				if ($query->num_rows) {
					$data = array_merge($data,array('country_name' => $this->getCountryName($data['country_id'])));
					if ($this->getZoneName($data['zone_id'])) {
						$data = array_merge($data,array('zone_name' => $this->getZoneName($data['zone_id'])));
					} else {
						$data = array_merge($data,array('zone_name' => array(0 => $this->language->get('text_none'))));
					}
				}
				return $data;
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$sql = "SELECT COUNT(DISTINCT p.product_id) AS total FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id)";
			]]></search>
			<add><![CDATA[
			$sql = "SELECT COUNT(DISTINCT p.product_id) AS total FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "vendor vd ON (pd.product_id = vd.vproduct_id) LEFT JOIN " . DB_PREFIX . "vendors vds ON (vd.vendor = vds.vendor_id)";
			]]></add>
		</operation>
			
		<operation error="skip">
			<search position="after" offset="4"><![CDATA[
			public function getTotalProductsByLayoutId($layout_id) {		
			]]></search>
			<add><![CDATA[
			public function getVendors($data = array()) {
		
				$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "vendors v ORDER BY v.vendor_name");
				$vendors_data = $query->rows;
				return $vendors_data;
				$this->cache->set('product', $vendors_data);
				
			}
			
			public function getCountryName($country_id) {
				$country_name = array();
				$query = $this->db->query("SELECT name AS CountryName FROM " . DB_PREFIX . "country c WHERE c.country_id = '" . (int)$country_id . "'");
				
				foreach ($query->rows as $result) {
					$country_name[] = $result['CountryName'];
				}
				return $country_name;
			}
			
			public function getZoneName($zone_id) {
				$zone_name = array();
				$query = $this->db->query("SELECT name AS ZoneName FROM " . DB_PREFIX . "zone z WHERE z.zone_id = '" . (int)$zone_id . "'");
				
				foreach ($query->rows as $result) {
					$zone_name[] = $result['ZoneName'];
				}
				return $zone_name;
			}
			
			public function getCountry($data = array()) {
				
				$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "country c ORDER BY c.name");
				$country_data = $query->rows;
				return $country_data;
				$this->cache->set('product', $country_data);
				
			}
			
			public function getCourier($data = array()) {
				
				$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "courier cr ORDER BY cr.courier_name");
				$couriers_data = $query->rows;
				return $couriers_data;
				$this->cache->set('product', $couriers_data);
				
			}
			
			public function getTotalProductsByVendor($data = array(),$vendor_id) {

				$sql = "SELECT COUNT(*) AS total FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "vendor vd ON (pd.product_id = vd.vproduct_id) LEFT JOIN " . DB_PREFIX . "vendors vds ON (vd.vendor = vds.vendor_id) WHERE vds.vendor_id = '" . (int)$vendor_id . "' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "'";
				
				if (isset($data['filter_name']) && !is_null($data['filter_name'])) {
					$sql .= " AND LCASE(pd.name) LIKE '%" . $this->db->escape(mb_strtolower($data['filter_name'], 'UTF-8')) . "%'";
				}

				if (isset($data['filter_model']) && !is_null($data['filter_model'])) {
					$sql .= " AND LCASE(p.model) LIKE '%" . $this->db->escape(mb_strtolower($data['filter_model'], 'UTF-8')) . "%'";
				}
				
				if (isset($data['filter_price']) && !is_null($data['filter_price'])) {
					$sql .= " AND p.price LIKE '" . $this->db->escape($data['filter_price']) . "%'";
				}
				
				if (isset($data['filter_quantity']) && !is_null($data['filter_quantity'])) {
					$sql .= " AND p.quantity = '" . $this->db->escape($data['filter_quantity']) . "'";
				}
				
				if (isset($data['filter_status']) && !is_null($data['filter_status'])) {
					$sql .= " AND p.status = '" . (int)$data['filter_status'] . "'";
				}

				$query = $this->db->query($sql);
				
				return $query->row['total'];
			}	
			
			public function getTotalWaitingApprovalProduct($data = array()) {
				$query = $this->db->query("SELECT count(*) AS total FROM " . DB_PREFIX . "product p WHERE p.status = '5'");
				return $query->row['total'];
			}
			]]></add>
		</operation>
	</file>
	
	<file name="admin/model/sale/order.php">
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->db->query("DELETE FROM `" . DB_PREFIX . "order` WHERE order_id = '" . (int)$order_id . "'");
			]]></search>
			<add><![CDATA[
			$this->db->query("DELETE FROM `" . DB_PREFIX . "order_shipping` WHERE order_id = '" . (int)$order_id . "'");
			$this->db->query("DELETE FROM `" . DB_PREFIX . "order_status_vendor_update` WHERE order_id = '" . (int)$order_id . "'");
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			$message .= $language->get('text_footer');
			]]></search>
			<add><![CDATA[
			if ($data['sent_comment_to_all']) {
				$getComments = $this->getVendorComment($order_id);
				foreach ($getComments AS $Comment) {
					if ($Comment['comment']) {
						$message .= strip_tags(html_entity_decode($Comment['comment'], ENT_QUOTES, 'UTF-8')) . "\n\n";
					}
				}
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			$mail->send();
			]]></search>
			<add><![CDATA[
			if (($this->config->get('vendor_email_status')) && (in_array((int)$data['order_status_id'],$this->config->get('vendor_history_order_status')))) {
				$order_product_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "'");
				foreach ($order_product_query->rows as $order_product) {	
				    $option_data_vendor = array();
					$order_option_vendor_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "order_option` WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . (int)$order_product['order_product_id'] . "'");
					foreach ($order_option_vendor_query->rows as $option) {
						if ($option['type'] != 'file') {
						$option_data_vendor[] = array(
						  'name'  => $option['name'],
						  'value' => (strlen($option['value']) > 20 ? substr($option['value'], 0, 20) . '..' : $option['value'])
						);
						} else {
						$filename = substr($option['value'], 0, strrpos($option['value'], '.'));
						$option_data_vendor[] = array(
						  'name'  => $option['name'],
						  'value' => (strlen($filename) > 20 ? substr($filename, 0, 20) . '..' : $filename)
						);	
					  }
					}
					
					$vmail = $this->db->query("SELECT pd.name AS name, p.model AS model,p.sku AS sku,vs.email AS email, vs.vendor_id AS vendor_id FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "vendor v ON (pd.product_id = v.vproduct_id) LEFT JOIN " . DB_PREFIX . "vendors vs ON (v.vendor = vs.vendor_id) WHERE p.product_id = '" . (int)$order_product['product_id'] . "'");

					$vendor_products[] = array (
						'name'  	=> $vmail->row['name'],
						'option'	=> $option_data_vendor,
						'model' 	=> $vmail->row['model'],
						'sku' 		=> $vmail->row['sku'],
						'price'		=> $order_product['price'],
						'quantity'	=> $order_product['quantity'],
						'total'		=> $order_product['total'],
						'tax'		=> $order_product['tax'],
						'vendor_id'	=> $vmail->row['vendor_id'],
						'email'		=> $vmail->row['email']
					);
					$vendor_list[] = array ('vendor_id' => $vmail->row['vendor_id']);
				}
				
				if ($vendor_products){
					$vendor_unique = array_map("unserialize", array_unique(array_map("serialize", $vendor_list))); 
					foreach ($vendor_unique as $vendor) {
						if ($vendor['vendor_id']) {
							$vemail = $this->db->query("SELECT *, CONCAT(firstname,' ',lastname) AS contact_name FROM `" . DB_PREFIX . "vendors` WHERE vendor_id = '" . (int)$vendor['vendor_id'] . "'");
							$cust_order_status_query = $this->db->query("SELECT name FROM " . DB_PREFIX . "order_status WHERE order_status_id = '" . (int)$data['order_status_id'] . "' AND language_id = '" . (int)$order_info['language_id'] . "'");
							$language = new Language($order_info['language_directory']);
							$language->load($order_info['language_filename']);
							$language->load('mail/vendor_email');
							$template = new Template();
							
							$mail = new Mail();
							$mail->protocol = $this->config->get('config_mail_protocol');
							$mail->parameter = $this->config->get('config_mail_parameter');
							$mail->hostname = $this->config->get('config_smtp_host');
							$mail->username = $this->config->get('config_smtp_username');
							$mail->password = $this->config->get('config_smtp_password');
							$mail->port = $this->config->get('config_smtp_port');
							$mail->timeout = $this->config->get('config_smtp_timeout');
							$mail->setTo($vemail->row['email']);
							$mail->setFrom($this->config->get('config_email'));
							$mail->setSender($this->config->get('config_name'));
							$mail->setSubject($language->get('text_vendor_email_subject') . $this->config->get('config_title'));
													
							$template->data['text_order_details'] = $language->get('text_order_details');
							$template->data['text_shipping_address'] = "<b>" . $language->get('text_shipping_address') . "</b><br/>";
							$template->data['date_ordered'] = '<b>' . $language->get('text_date_ordered') . ' </b>' . date('F j\, Y') . '<br/>';
							$template->data['logo'] = HTTP_IMAGE . $this->config->get('config_logo');
							$template->data['store_name'] = $order_info['store_name'];
							$template->data['store_url'] = $order_info['store_url'];
							
							/*Show header title*/
							$template->data['title'] = sprintf($language->get('text_new_subject'), html_entity_decode($order_info['store_name'], ENT_QUOTES, 'UTF-8'), $order_id);		
							
							/*show vendor name*/
							$template->data['vendor_name'] = '<b>' . $language->get('text_title') . $vemail->row['contact_name'] . '</b>,' . "\n\n";
							
							/*show message to vendor*/
							$template->data['vendor_message'] = $this->config->get('vendor_email_message') . "\n\n";
																				
							/*show vendor customer order id*/
							if ($this->config->get('vendor_cust_order_id')) {
								$template->data['order_id'] = '<b>' . $language->get('text_vendor_order_id') . '</b>' . $order_id . '<br/>';
							} else {
								$template->data['order_id'] = '';
							}
							
							/*show vendor customer order status*/
							if ($this->config->get('vendor_cust_order_status')) {
								$template->data['order_status'] = '<b>' . $language->get('text_order_status') . ' </b>' . $cust_order_status_query->row['name'] . '<br/>';
							} else {
								$template->data['order_status'] = '';
							}
							
							/*show payment method*/
							if ($this->config->get('vendor_cust_payment_method')) {
								$template->data['payment_method'] = '<b>' . $language->get('text_payment_method') . ' </b>' . $order_info['payment_method'] . '<br/>';
							} else {
								$template->data['payment_method'] = '';
							}
							
							/*show vendor customer email*/
							if ($this->config->get('vendor_cust_email')) {
								$template->data['email_address'] = '<b>' . $language->get('text_email') . ' </b>' . $order_info['email'] . '<br/>';
							} else {
								$template->data['email_address'] = '';
							}
							
							/*show vendor customer telephone*/
							if ($this->config->get('vendor_cust_telephone')) {
								$template->data['telephone'] = '<b>' . $language->get('text_telephone') . ' </b>' . $order_info['telephone'] . '<br/>';
							} else {
								$template->data['telephone'] = '';
							}
							
							/*show vendor customer shipping address*/
							if ($this->config->get('vendor_cust_shipping_address')) {
								if (($order_info['shipping_firstname']) && ($order_info['shipping_address_1'])) { 
									$format = '<b>{firstname} {lastname}</b>' . "\n" . '{company}' . "\n" . '{address_1}' . "\n" . '{address_2}' . "\n" . '{city}, {postcode}' . "\n" . '{zone}, {country}';
									$find = array(
									'{firstname}',
									'{lastname}',
									'{company}',
									'{address_1}',
									'{address_2}',
									'{city}',
									'{postcode}',
									'{zone}',
									'{zone_code}',
									'{country}'
									);
								
									$replace = array(
										'firstname' => $order_info['shipping_firstname'],
										'lastname'  => $order_info['shipping_lastname'],
										'company'   => $order_info['shipping_company'],
										'address_1' => $order_info['shipping_address_1'],
										'address_2' => $order_info['shipping_address_2'],
										'city'      => $order_info['shipping_city'],
										'postcode'  => $order_info['shipping_postcode'],
										'zone'      => $order_info['shipping_zone'],
										'zone_code' => $order_info['shipping_zone_code'],
										'country'   => $order_info['shipping_country']  
									);
									$template->data['cust_shipping_address'] = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));
								} else {
									$format = '<b>{firstname} {lastname}</b>' . "\n" . '{company}' . "\n" . '{address_1}' . "\n" . '{address_2}' . "\n" . '{city}, {postcode}' . "\n" . '{zone}, {country}';
									$find = array(
										'{firstname}',
										'{lastname}',
										'{company}',
										'{address_1}',
										'{address_2}',
										'{city}',
										'{postcode}',
										'{zone}',
										'{zone_code}',
										'{country}'
									);
								
									$replace = array(
										'firstname' => $order_info['payment_firstname'],
										'lastname'  => $order_info['payment_lastname'],
										'company'   => $order_info['payment_company'],
										'address_1' => $order_info['payment_address_1'],
										'address_2' => $order_info['payment_address_2'],
										'city'      => $order_info['payment_city'],
										'postcode'  => $order_info['payment_postcode'],
										'zone'      => $order_info['payment_zone'],
										'zone_code' => $order_info['payment_zone_code'],
										'country'   => $order_info['payment_country']  
									);
									$template->data['cust_shipping_address'] = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));
								}
							} else {
								$template->data['cust_shipping_address'] = '';
							}
							
							/*show vendor information*/
							if ($this->config->get('vendor_address')) {
								$template->data['show_vendor_contact'] = True;
								$format = '<b>{firstname} {lastname}</b>' . "\n" . '{company}' . "\n" . '{address_1}' . "\n" . '{address_2}' . "\n" . '{city}, {postcode}' . "\n" . '{zone}, {country}';
									$find = array(
										'{firstname}',
										'{lastname}',
										'{company}',
										'{address_1}',
										'{address_2}',
										'{city}',
										'{postcode}',
										'{zone}',
										'{country}'
									);
									
								$zone_name = $this->db->query("SELECT name FROM " . DB_PREFIX . "zone WHERE zone_id = '" . (int)$vemail->row['zone_id'] . "' AND country_id = '" . (int)$vemail->row['country_id'] . "'");			
								$country_name = $this->db->query("SELECT name FROM " . DB_PREFIX . "country WHERE country_id = '" . (int)$vemail->row['country_id'] . "'");	
								
									$replace = array(
										'firstname' => $vemail->row['firstname'],
										'lastname'  => $vemail->row['lastname'],
										'company'   => $vemail->row['company'],
										'address_1' => $vemail->row['address_1'],
										'address_2' => $vemail->row['address_2'],
										'city'      => $vemail->row['city'],
										'postcode'  => $vemail->row['postcode'],
										'zone'  	=> isset($zone_name->row['name']) ? $zone_name->row['name'] : 'None',
										'country'   => $country_name->row['name']
									);
								
								$vendor_address = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));
								
								$template->data['vendor_address'] = $vendor_address . '<br/>';
								$template->data['text_vendor_contact'] = $language->get('text_vendor_contact');
								
								/*show vendor email*/
								if ($this->config->get('vendor_email')) {
									$template->data['vendor_email'] = '<b>' . $language->get('text_email') . ' </b>' . $vemail->row['email'] . '<br/>';
								} else {
									$template->data['vendor_email'] = '';
								}
								
								/*show vendor telephone*/
								if ($this->config->get('vendor_telephone')) {
									$template->data['vendor_telephone'] = '<b>' . $language->get('text_telephone') . ' </b>' . $vemail->row['telephone'] . '<br/>';
								} else {
									$template->data['vendor_telephone'] = '';
								}
								
							} else {
								$template->data['show_vendor_contact'] = False;
							}
							/*vendor address*/
						
							$vsubtotal = $this->db->query("SELECT SUM(total) AS sum_product_total, SUM(quantity*tax) as sum_product_tax FROM " . DB_PREFIX . "order_product op LEFT JOIN " . DB_PREFIX . "vendor v ON ( op.product_id = v.vproduct_id ) WHERE v.vendor =  '" . (int)$vendor['vendor_id'] . "' AND op.order_id =  '" . (int)$order_id . "'");
							$subtotal = $vsubtotal->row['sum_product_total'];
							$vat = $this->db->query("SELECT title FROM " . DB_PREFIX . "order_total WHERE order_id = '" . (int)$order_id . "' AND code = 'tax'");
	
							//get shipping cost
							$shipcost = $this->db->query("SELECT * FROM `" . DB_PREFIX . "order_shipping` WHERE vendor_id = '" . (int)$vendor['vendor_id'] . "' AND order_id = '" . (int)$order_id . "'");
							
							if (!empty($vat->row)) {
								if ($this->config->get('tax_status') && ($vsubtotal->row['sum_product_tax'] != 0)) {
									$template->data['text_tax'] = $vat->row['title'];
									$template->data['tax'] = $this->currency->format($vsubtotal->row['sum_product_tax'] + (isset($shipcost->row['tax']) ? $shipcost->row['tax'] : '0'));
								} else {
									$template->data['tax'] = '0';
								}
							} else {
									$template->data['tax'] = false;
							}
														
							if ($shipcost->rows) {
								if ($shipcost->row['cost']) {
									$total = $vsubtotal->row['sum_product_total'] + $shipcost->row['cost'] + ($this->config->get('tax_status') ? ($vsubtotal->row['sum_product_tax'] + $shipcost->row['tax']): 0);
								} else {
									$total = $vsubtotal->row['sum_product_total'] + ($this->config->get('tax_status') ? $vsubtotal->row['sum_product_tax']: 0);
								}
								
								$template->data['shipping'] = $shipcost->row['title'] . ' (' . $this->weight->format($shipcost->row['weight'], $this->config->get('config_weight_class_id')) . ')';
								$template->data['scost'] = $this->currency->format($shipcost->row['cost']);
								
							} else {
								$total = $vsubtotal->row['sum_product_total'] + ($this->config->get('tax_status') ? $vsubtotal->row['sum_product_tax']: 0);
								$template->data['scost'] = 0;
							}
							
							//end get shipping cost
							
							foreach ($vendor_products as $vendor_product) {
								if ($vendor['vendor_id'] == $vendor_product['vendor_id']) {
									$template->data['vendor_products'][] = array(
										'name'     => $vendor_product['name'],
										'option'   => $vendor_product['option'],
										'model'    => $vendor_product['model'],
										'sku'	   => $vendor_product['sku'],
										'price'	   => $this->currency->format($vendor_product['price'] + ($this->config->get('tax_status') ? $vendor_product['tax'] : 0)),
										'quantity' => $vendor_product['quantity'],
										'total'	   => $this->currency->format($vendor_product['total'] + ($this->config->get('tax_status') ? ($vendor_product['tax'] * $vendor_product['quantity']) : 0)),
										'email'    => $vendor_product['email']
									);
								}
							}
							
							$template->data['product'] = $language->get('column_product');
							$template->data['model'] = $language->get('column_model');
							$template->data['quantity'] = $language->get('column_quantity');
							$template->data['unit_price'] = $language->get('column_unit_price');
							$template->data['total'] = $language->get('column_total');
							$template->data['subtotal'] = $language->get('column_subtotal');
							$template->data['vendor_auto_msg'] = $language->get('text_vendor_auto_msg');
							$template->data['vendor_alert'] = $language->get('text_vendor_email') . $this->config->get('config_title');
							$template->data['vsubtotal'] = $this->currency->format($subtotal);
							$template->data['vtotal'] = $this->currency->format($total);
							
							if (file_exists(DIR_TEMPLATE . '/mail/vendor_email.tpl')) {
								$html = $template->fetch('mail/vendor_email.tpl');
							}
							$mail->setHtml($html);
							$mail->send();
						} 
					}
				}
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			public function getEmailsByProductsOrdered($products, $start, $end) {
			]]></search>
			<add><![CDATA[
			/*code start*/
			public function UpdateAllMultiVendorOrderStatus($order_id, $data) {
				$this->db->query("UPDATE `" . DB_PREFIX . "order_status_vendor_update` SET order_status_id = '" . (int)$data['order_status_id'] . "' WHERE order_id = '" . $order_id . "'");
			}
			
			public function getVendorComment($order_id) {
				$query = $this->db->query("SELECT comment FROM " . DB_PREFIX . "order_history WHERE order_id = '" . (int)$order_id . "' ORDER BY order_history_id DESC");
				return $query->rows;
			}
			/*code end*/
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$query = $this->db->query("SELECT oh.date_added, os.name AS status, oh.comment, oh.notify FROM " . DB_PREFIX . "order_history oh LEFT JOIN " . DB_PREFIX . "order_status os ON oh.order_status_id = os.order_status_id WHERE oh.order_id = '" . (int)$order_id . "' AND os.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY oh.date_added ASC LIMIT " . (int)$start . "," . (int)$limit);
			]]></search>
			<add><![CDATA[
			$query = $this->db->query("SELECT oh.date_added, os.name AS status, oh.comment, oh.notify, oh.vendor_id FROM " . DB_PREFIX . "order_history oh LEFT JOIN " . DB_PREFIX . "order_status os ON oh.order_status_id = os.order_status_id WHERE oh.order_id = '" . (int)$order_id . "' AND os.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY oh.date_added ASC LIMIT " . (int)$start . "," . (int)$limit);
			]]></add>
		</operation>
	</file>
	
	<file name="admin/model/user/user.php">
		<operation error="skip">
			<search position="replace"><![CDATA[
			$this->db->query("INSERT INTO `" . DB_PREFIX . "user` SET username = '" . $this->db->escape($data['username']) . "', salt = '" . $this->db->escape($salt = substr(md5(uniqid(rand(), true)), 0, 9)) . "', password = '" . $this->db->escape(sha1($salt . sha1($salt . sha1($data['password'])))) . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', user_group_id = '" . (int)$data['user_group_id'] . "', status = '" . (int)$data['status'] . "', date_added = NOW()");
			]]></search>
			<add><![CDATA[
			$this->db->query("INSERT INTO `" . DB_PREFIX . "user` SET username = '" . $this->db->escape($data['username']) . "', salt = '" . $this->db->escape($salt = substr(md5(uniqid(rand(), true)), 0, 9)) . "', password = '" . $this->db->escape(sha1($salt . sha1($salt . sha1($data['password'])))) . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', folder = '" . (isset($this->request->post['generate_path']) ? $this->db->escape($data['username']) : '') . "', vendor_permission = '" . (int)$data['vendor_product'] . "', cat_permission = '" . (isset($data['vendor_category']) ? serialize($data['vendor_category']) : '') . "', store_permission = '" . (isset($data['product_store']) ? serialize($data['product_store']) : '') . "', user_group_id = '" . (int)$data['user_group_id'] . "', status = '" . (int)$data['status'] . "', date_added = NOW()");
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$this->db->query("UPDATE `" . DB_PREFIX . "user` SET username = '" . $this->db->escape($data['username']) . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', user_group_id = '" . (int)$data['user_group_id'] . "', status = '" . (int)$data['status'] . "' WHERE user_id = '" . (int)$user_id . "'");
			]]></search>
			<add><![CDATA[
			if (isset($this->request->post['generate_path'])) {
				$this->db->query("UPDATE `" . DB_PREFIX . "user` SET username = '" . $this->db->escape($data['username']) . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', folder = '" . (isset($this->request->post['generate_path']) ? $this->db->escape($data['username']) : '') . "', user_group_id = '" . (int)$data['user_group_id'] . "', vendor_permission = '" . (int)$data['vendor_product'] . "', cat_permission = '" . (isset($data['vendor_category']) ? serialize($data['vendor_category']) : '') . "', store_permission = '" . (isset($data['product_store']) ? serialize($data['product_store']) : '') . "', status = '" . (int)$data['status'] . "' WHERE user_id = '" . (int)$user_id . "'");
			
				if ($data['status'] == 1) {
					$this->language->load('mail/signup');
					$subject = sprintf($this->language->get('text_subject'), $this->config->get('config_name'));
					
					$message = sprintf($this->language->get('text_welcome'), $this->config->get('config_name')) . "\n\n";
					$message .= $this->language->get('text_login') . "\n";
						
					$message .= HTTP_SERVER . "\n\n";
					$message .= $this->language->get('text_services') . "\n\n";
					$message .= $this->language->get('text_thanks') . "\n";
					$message .= $this->config->get('config_name');
					
					$mail = new Mail();
					$mail->protocol = $this->config->get('config_mail_protocol');
					$mail->parameter = $this->config->get('config_mail_parameter');
					$mail->hostname = $this->config->get('config_smtp_host');
					$mail->username = $this->config->get('config_smtp_username');
					$mail->password = $this->config->get('config_smtp_password');
					$mail->port = $this->config->get('config_smtp_port');
					$mail->timeout = $this->config->get('config_smtp_timeout');				
					$mail->setTo($data['email']);
					$mail->setFrom($this->config->get('config_email'));
					$mail->setSender($this->config->get('config_name'));
					$mail->setSubject($subject);
					$mail->setText($message);
					$mail->send();
				}
			} elseif (isset($this->request->post['remove_path'])) {
				$this->db->query("UPDATE `" . DB_PREFIX . "user` SET username = '" . $this->db->escape($data['username']) . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', folder = '" . (isset($this->request->post['remove_path']) ? '' : $this->db->escape($data['username'])) . "', user_group_id = '" . (int)$data['user_group_id'] . "', vendor_permission = '" . (int)$data['vendor_product'] . "', cat_permission = '" . (isset($data['vendor_category']) ? serialize($data['vendor_category']) : '') . "', store_permission = '" . (isset($data['product_store']) ? serialize($data['product_store']) : '') . "', status = '" . (int)$data['status'] . "' WHERE user_id = '" . (int)$user_id . "'");
			} else {
				$this->db->query("UPDATE `" . DB_PREFIX . "user` SET username = '" . $this->db->escape($data['username']) . "', firstname = '" . $this->db->escape($data['firstname']) . "', lastname = '" . $this->db->escape($data['lastname']) . "', email = '" . $this->db->escape($data['email']) . "', user_group_id = '" . (int)$data['user_group_id'] . "', vendor_permission = '" . (int)$data['vendor_product'] . "', cat_permission = '" . (isset($data['vendor_category']) ? serialize($data['vendor_category']) : '') . "', store_permission = '" . (isset($data['product_store']) ? serialize($data['product_store']) : '') . "', status = '" . (int)$data['status'] . "' WHERE user_id = '" . (int)$user_id . "'");
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			$sql = "SELECT * FROM `" . DB_PREFIX . "user`";
			]]></search>
			<add><![CDATA[
			if (isset($this->request->get['filter_status']) && !is_null($this->request->get['filter_status'])) {
				$sql .= " WHERE status = '" . (int)$this->request->get['filter_status'] . "'";
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			$query = $this->db->query("SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "user`");
			]]></search>
			<add><![CDATA[
			$sql = "SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "user`";
			if (isset($this->request->get['filter_status']) && !is_null($this->request->get['filter_status'])) {
				$sql .= " WHERE status = '" . (int)$this->request->get['filter_status'] . "'";
			}
			$query = $this->db->query($sql);
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			public function getTotalUsersByGroupId($user_group_id) {
			]]></search>
			<add><![CDATA[
			public function getVendors($data = array()) {
				$sql = "SELECT vendor_id,vendor_name as name FROM " . DB_PREFIX . "vendors ORDER BY vendor_id" ;
					
				$query = $this->db->query($sql);
				
				return $query->rows;
			}
			
			Public function getUserAwaitingApproval($data = array()) {
				$query = $this->db->query("SELECT count(*) AS total FROM " . DB_PREFIX . "user u WHERE u.status = '5'");
				
				return $query->row['total'];
			}
			]]></add>
		</operation>
	</file>
	
	<file name="admin/view/template/catalog/download_form.tpl">
		<operation error="skip">
			<search position="after"><![CDATA[
			<table class="form">
			]]></search>
			<add><![CDATA[
			<tr>
            <td><span class="required">*</span> <?php echo $entry_vendor_name; ?></td>
            <td><select name="vendor">
                <option value="0"><?php echo $text_none; ?></option>
                <?php foreach ($vendors as $vend) { ?>
					<?php if ($vend['vendor_id'] == $vendor) { ?>
					<option value="<?php echo $vend['vendor_id']; ?>" selected="selected"><?php echo $vend['vendor_name']; ?></option>
					<?php } else { ?>
					<option value="<?php echo $vend['vendor_id']; ?>"><?php echo $vend['vendor_name']; ?></option>
					<?php } ?>
               	<?php } ?> </select>
			</td>
			</tr> 
			]]></add>
		</operation>
	</file>
	
	<file name="admin/view/template/catalog/information_form.tpl">
		<operation error="skip">
			<search position="after" offset="1"><![CDATA[
			<div id="tab-data">
			]]></search>
			<add><![CDATA[
			<tr><td><span class="required">*</span> <?php echo $entry_vendor_name; ?></td>
            <td><select name="vendor_id">
                <option value="0"><?php echo $text_none; ?></option>
                <?php foreach ($vendors as $vend) { ?>
					<?php if ($vend['vendor_id'] == $vendor_id) { ?>
					<option value="<?php echo $vend['vendor_id']; ?>" selected="selected"><?php echo $vend['vendor_name']; ?></option>
					<?php } else { ?>
					<option value="<?php echo $vend['vendor_id']; ?>"><?php echo $vend['vendor_name']; ?></option>
					<?php } ?>
				<?php } ?>
                </select>
			</td>
			</tr> 
			]]></add>
		</operation>
	</file>
	
	<file name="admin/view/template/catalog/product_form.tpl">
		<operation error="skip">
			<search position="replace"><![CDATA[
			<a href="#tab-data"><?php echo $tab_data; ?></a>
			]]></search>
			<add trim="true"><![CDATA[
			<a href="#tab-data"><?php echo $tab_data; ?></a><a href="#tab-vendor"><?php echo $tab_vendor; ?></a>
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before" offset="1"><![CDATA[
			<td><?php echo $entry_sku; ?></td>
			]]></search>
			<add><![CDATA[
			<tr>
              <td><?php echo $entry_status; ?></td>
              <td><select name="status">
			    <?php if ($status != 5) { ?>
                  <?php if ($status) { ?>
                  <option value="1" selected="selected"><?php echo $text_enabled; ?></option>
                  <option value="0"><?php echo $text_disabled; ?></option>
				  <option value="5"><?php echo $txt_pending_approval; ?></option>
                  <?php } else { ?>
                  <option value="1"><?php echo $text_enabled; ?></option>
                  <option value="0" selected="selected"><?php echo $text_disabled; ?></option>
				  <option value="5"><?php echo $txt_pending_approval; ?></option>
                  <?php } ?>
				<?php } else { ?>
				  <option value="1"><?php echo $text_enabled; ?></option>
				  <option value="0"><?php echo $text_disabled; ?></option>	
                  <option value="5" selected="selected"><?php echo $txt_pending_approval; ?></option>
				<?php } ?>
                </select></td>
            </tr>
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			<div id="tab-links">
			]]></search>
			<add><![CDATA[
			<div id="tab-vendor">
			  <table class="form">
			  <tr>
				<td><?php echo $entry_vendor_name; ?></td>
				<td><select id="vendor" name="vendor" onchange="getVendors();">
					<option value="0" selected="selected"><?php echo $text_none; ?></option>
					<?php foreach ($vendors as $vend) { ?>
					<?php if ($vend['vendor_id'] == $vendor) { ?>
					<option value="<?php echo $vend['vendor_id']; ?>" selected="selected"><?php echo $vend['vendor_name']; ?></option>
					<?php } else { ?>
					<option value="<?php echo $vend['vendor_id']; ?>"><?php echo $vend['vendor_name']; ?></option>
					<?php } ?>
					<?php } ?>
				  </select></td>
			  </tr> 
			<tr>
				<td><?php echo $entry_vendor_country_origin; ?></td>
				<td><select name="ori_country">
					<option value="0" selected="selected"><?php echo $text_none; ?></option>
					<?php foreach ($countries as $country) { ?>
					<?php if ($country['country_id'] == $ori_country) { ?>
					<option value="<?php echo $country['country_id']; ?>" selected="selected"><?php echo $country['name']; ?></option>
					<?php } else { ?>
					<option value="<?php echo $country['country_id']; ?>"><?php echo $country['name']; ?></option>
					<?php } ?>
					<?php } ?>
				  </select></td>
			  </tr> 
			  <tr>
				<td><?php echo $entry_vendor_product_cost; ?></td>
				<td><input type="text" name="product_cost" value="<?php echo $product_cost; ?>" onKeyUp="totalc(this.form)" /></td>
			  </tr>
			  <tr>
				<td><?php echo $entry_vendor_shipping_method; ?></td>
				<td><select name="shipping_method">
				<option value="0" selected="selected"><?php echo $text_none; ?></option>
					<?php foreach ($couriers as $courier) { ?>
					<?php if ($courier['courier_id'] == $shipping_method) { ?>
						<option value="<?php echo $courier['courier_id']; ?>" selected="selected"><?php echo $courier['courier_name']; ?></option>
					<?php } else { ?>
						<option value="<?php echo $courier['courier_id']; ?>"><?php echo $courier['courier_name']; ?></option>
					<?php } ?>
					<?php } ?>
				</selected>
				</td>
			  </tr>
			  <tr>
				<td><?php echo $entry_vendor_prefered_shipping_method; ?></td>
				<td><select name="prefered_shipping">
					<option value="0" selected="selected"><?php echo $text_none; ?></option>
					<?php foreach ($couriers as $courier) { ?>
					<?php if ($courier['courier_id'] == $prefered_shipping) { ?>
						<option value="<?php echo $courier['courier_id']; ?>" selected="selected"><?php echo $courier['courier_name']; ?></option>
					<?php } else { ?>
						<option value="<?php echo $courier['courier_id']; ?>"><?php echo $courier['courier_name']; ?></option>
					<?php } ?>
					<?php } ?>
				</selected>			
				</td>
			  </tr>
			  <tr>
				<td><?php echo $entry_vendor_shipping_cost; ?></td>
				<td><input type="text" name="shipping_cost" value="<?php echo $shipping_cost; ?>" onKeyUp="totalc(this.form)" /></td>
			  </tr>
			  <tr>
				<td><?php echo $entry_vendor_total; ?></td>
				<td><input type="text" name="vtotal" value="<?php echo $vtotal; ?>" onKeyUp="procost(this.form)" /> 
				<?php if (!empty($paypal_email)) { ?>
				<a style="text-decoration:none" href="https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&no_shipping=1&business=<?php echo $paypal_email; ?>&item_name=<?php echo $product_description[$language['language_id']]['name']; ?>&amount=<?php echo round($vtotal,2); ?>&currency_code=<?php echo $config['config_currency']; ?>" target="_blank"><img src="../image/data/paypal_button.png" height="18" border="0" /></a>
				<?php } ?></td>
			  </tr>
			  <tr>
				<td><?php echo $entry_vendor_product_url; ?></td>
				<td><textarea name="product_url" cols="68" rows="3" ><?php echo $product_url; ?></textarea></td>
			  </tr>
			  <tr>
				<td><?php echo $entry_vendor_wholesale; ?></td>
				<td><textarea name="wholesale" cols="68" rows="3" ><?php echo $wholesale; ?></textarea></td>
			  </tr>
			  <tr>
				<td><?php echo $entry_vendor_company; ?></td>
				<td><input type="text" name="company" id="company" value="<?php echo $company; ?>" disabled /></td>
			  </tr>
			  <tr>
				<td><?php echo $entry_vendor_contact_name; ?></td>
				<td><input type="text" name="vname" id="vname" value="<?php echo $vname; ?>" disabled /></td>
			  </tr>
			  <tr>
				<td><?php echo $entry_vendor_telephone; ?></td>
				<td><input type="text" name="telephone" id="telephone" value="<?php echo $telephone; ?>" disabled /></td>
			  </tr>
			   <tr>
				<td><?php echo $entry_vendor_fax; ?></td>
				<td><input type="text" name="fax" id="fax" value="<?php echo $fax; ?>" disabled /></td>
			  </tr>
			  <tr>
				<td><?php echo $entry_vendor_email; ?></td>
				<td><input type="text" name="email" id="email" value="<?php echo $email; ?>" disabled /></td>
			  </tr>
			  <tr>
				<td><?php echo $entry_vendor_paypal_email; ?></td>
				<td><input type="text" name="paypal_email" id="paypal_email" value="<?php echo $paypal_email; ?>" disabled /></td>
			  </tr>
			  <tr>
				<td><?php echo $entry_vendor_description; ?></td>
				<td><textarea name="vendor_description" id="vendor_description" cols="68" rows="3" disabled ><?php echo $vendor_description; ?></textarea></td>
			  </tr>
			  <tr>
				<td><?php echo $entry_vendor_address; ?></td>
				<td><textarea name="vendor_address" id="vendor_address" cols="68" rows="3" disabled ><?php echo $vendor_address; ?></textarea></td>
			  </tr>
			  <tr>
				<td><?php echo $entry_vendor_country_zone; ?></td>
				<td><input type="text" name="vendor_country_zone" id="vendor_country_zone" value="<?php echo $vendor_country_zone; ?>" size="65" disabled />
				</td>
			  </tr> 
			  <tr>
				<td><?php echo $entry_vendor_store_url; ?></td>
				<td><textarea name="store_url" id="store_url" cols="68" rows="3" disabled ><?php echo $store_url; ?></textarea></td>
			  </tr>
			  </table>
			</div>
			]]></add>
		</operation>
			
		<operation error="skip">
			<search position="before" offset="1" index="2"><![CDATA[
	        <td><?php echo $entry_status; ?></td>
			]]></search>
			<add><![CDATA[
			<!--
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before" offset="1"><![CDATA[
	        <td><?php echo $entry_sort_order; ?></td>
			]]></search>
			<add><![CDATA[
			-->
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			<script type="text/javascript" src="view/javascript/jquery/ui/jquery-ui-timepicker-addon.js"></script> 
			]]></search>
			<add><![CDATA[
			<script type="text/javascript"><!--	
			function getVendors() {
				$.ajax({
					url: 'index.php?route=catalog/product/vendor&token=<?php echo $token; ?>&vendor_id=' + $('#vendor').attr('value'),
					dataType: 'json',
					success: function(data) {
						if (data['vendor_name']) {
							document.getElementById('company').value = data['vendor_name']; 
							document.getElementById('vname').value = data['vname']; 
							document.getElementById('telephone').value = data['telephone']; 
							document.getElementById('fax').value = data['fax']; 
							document.getElementById('email').value = data['email']; 
							document.getElementById('paypal_email').value = data['paypal_email']; 
							document.getElementById('vendor_description').value = data['vendor_description']; 
							document.getElementById('vendor_address').value = data['address'];
							document.getElementById('vendor_country_zone').value = data['zone_name'][0] + ', ' + data['country_name'][0]; 
							document.getElementById('store_url').value = data['store_url']; 
						} else {
							document.getElementById('company').value = ''; 
							document.getElementById('vname').value = '';
							document.getElementById('telephone').value = '';
							document.getElementById('fax').value = ''; 
							document.getElementById('email').value = ''; 
							document.getElementById('paypal_email').value = ''; 
							document.getElementById('vendor_description').value = '';
							document.getElementById('vendor_address').value = ''; 
							document.getElementById('vendor_country_zone').value = '';
							document.getElementById('store_url').value = '';
						}
					}
				});
			}
			//--></script>
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			<?php echo $footer; ?>
			]]></search>
			<add><![CDATA[
			<script type="text/javascript"><!--
			function totalc() {
				if (this.form.product_cost.value != '' && this.form.product_cost.value >= '0') {
					if (this.form.shipping_cost.value != '' && this.form.shipping_cost.value >='0') {
						var totalc = parseFloat(this.form.product_cost.value) + parseFloat(this.form.shipping_cost.value)
						this.form.vtotal.value = totalc
					}
				}
			}
			//--></script>
			]]></add>
		</operation>
	</file>
	
	<file name="admin/view/template/catalog/product_list.tpl">
		<operation error="skip">
			<search position="before"><![CDATA[
			<td class="left"><?php if ($sort == 'p.model') { ?>
			]]></search>
			<add><![CDATA[
			<td class="left"><?php if ($sort == 'vds.vendor_name') { ?>
            <a href="<?php echo $sort_vendor_name; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_vendor; ?></a>
            <?php } else { ?>
            <a href="<?php echo $sort_vendor_name; ?>"><?php echo $column_vendor; ?></a>
            <?php } ?></td>
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			<td class="left"><?php if ($sort == 'p.price') { ?>
			]]></search>
			<add><![CDATA[
			<td class="left"><?php if ($sort == 'p.sku') { ?>
            <a href="<?php echo $sort_sku; ?>" class="<?php echo strtolower($order); ?>"><?php echo $column_sku; ?></a>
            <?php } else { ?>
            <a href="<?php echo $sort_sku; ?>"><?php echo $column_sku; ?></a>
            <?php } ?></td>
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			<td><input type="text" name="filter_name" value="<?php echo $filter_name; ?>" /></td>
			]]></search>
			<add><![CDATA[
			<td><select name="filter_vendor_name">
		        <option value="*"></option>
				<?php if (!is_null($filter_vendor_name) && !$filter_vendor_name) { ?>
                <?php } else { ?>
				<?php } ?>
                <?php foreach ($vendors as $vendor) { ?>
					<?php if (!is_null($filter_vendor_name) && !$filter_vendor_name) { ?>
					  <option value="<?php echo $vendor['vendor_id']; ?>"><?php echo $vendor['vendor_name']; ?></option>
						<?php } else { ?>
					  <option value="<?php echo $vendor['vendor_id']; ?>"><?php echo $vendor['vendor_name']; ?></option>
					<?php } ?>
				<?php } ?>
                </select>				
			</select></td>
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			<td><input type="text" name="filter_model" value="<?php echo $filter_model; ?>" /></td>
			]]></search>
			<add><![CDATA[
			<td><input type="text" name="filter_sku" value="<?php echo $filter_sku; ?>" /></td>
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after" offset="1"><![CDATA[
			<option value="0"><?php echo $text_disabled; ?></option>
			]]></search>
			<add><![CDATA[
			<?php if ($filter_status == 5) { ?>
                <option value="5" selected="selected"><?php echo $txt_pending_approval; ?></option>
            <?php } else { ?>
                <option value="5"><?php echo $txt_pending_approval; ?></option>
            <?php } ?>
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			<td class="left"><?php echo $product['name']; ?></td>
			]]></search>
			<add><![CDATA[
			<td class="left"><?php echo $product['vendor_name']; ?></td>
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			<td class="left"><?php echo $product['model']; ?></td>
			]]></search>
			<add><![CDATA[
			<td class="left"><?php echo $product['sku']; ?></td>
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace" offset="1"><![CDATA[
			<td class="center" colspan="8"><?php echo $text_no_results; ?></td>
			]]></search>
			<add><![CDATA[
			<td class="center" colspan="10"><?php echo $text_no_results; ?></td>
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			var filter_price = $('input[name=\'filter_price\']').attr('value');
			]]></search>
			<add><![CDATA[
			var filter_vendor_name = $('select[name=\'filter_vendor_name\']').attr('value');
	
			if (filter_vendor_name != '*') {
				url += '&filter_vendor_name=' + encodeURIComponent(filter_vendor_name);
			}	
			
			var filter_sku = $('input[name=\'filter_sku\']').attr('value');
			
			if (filter_sku) {
				url += '&filter_sku=' + encodeURIComponent(filter_sku);
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before" offset="1"><![CDATA[
			<?php echo $footer; ?>
			]]></search>
			<add><![CDATA[
			$('input[name=\'filter_sku\']').autocomplete({
				delay: 0,
				source: function(request, response) {
					$.ajax({
						url: 'index.php?route=catalog/product/autocomplete&token=<?php echo $token; ?>&filter_sku=' +  encodeURIComponent(request.term),
						dataType: 'json',
						success: function(json) {		
							response($.map(json, function(item) {
								return {
									label: item.sku,
									value: item.product_id
								}
							}));
						}
					});
				}, 
				select: function(event, ui) {
					$('input[name=\'filter_sku\']').val(ui.item.label);
									
					return false;
				}
			});
			]]></add>
		</operation>
	</file>
	
	<file name="admin/view/template/common/header.tpl">
		<operation error="skip">
			<search position="after"><![CDATA[
			<div id="menu">
			]]></search>
			<add><![CDATA[
			<?php if (!$this->user->getVP()) { ?>
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			<li id="sale"><a class="top"><?php echo $text_sale; ?></a>
			]]></search>
			<add><![CDATA[
			<li id="vendors"><a class="top"><?php echo $text_vendor_tool; ?></a>
			<ul>
			<li><a href="<?php echo $add_vendors; ?>"><?php echo $text_add_vendors; ?></a></li>
			<li><a href="<?php echo $add_courier; ?>"><?php echo $text_add_courier; ?></a></li>
			<li><a class="parent"><?php echo $text_vendor_sales; ?></a>
				<ul>
				<li><a href="<?php echo $ven_transaction; ?>"><?php echo $text_vendor_transaction; ?></a></li>
				<li><a href="<?php echo $payment_history; ?>"><?php echo $text_payment_history; ?></a></li>
				</ul>
			</li>
			<li><a class="parent"><?php echo $text_setup; ?></a>
				<ul>
				<li><a href="<?php echo $ven_limit; ?>"><?php echo $text_package_limit; ?></a></li>
				<li><a href="<?php echo $ven_commission; ?>"><?php echo $text_vendor_commission; ?></a></li>
				<li><a href="<?php echo $ven_setting; ?>"><?php echo $text_vendor_setting; ?></a></li>
				</ul>
			</li>
			</ul>
			</li>
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			<ul class="right">
			]]></search>
			<add><![CDATA[
			<?php } else { ?>
			<ul class="left" style="display: none;">
			  <li id="dashboard"><a href="<?php echo $home; ?>" class="top"><?php echo $text_dashboard; ?></a></li>
			  <li><a class="top"><?php echo $text_catalog; ?></a>
				<ul>
				  <li><a href="<?php echo $pro2ven; ?>"><?php echo $text_product; ?></a></li>
				  <?php if ($this->config->get('vendor_category_menu')) { ?>
				  <li><a href="<?php echo $cat2ven; ?>"><?php echo $text_category; ?></a></li>
				  <?php } ?>
				  <li><a href="<?php echo $down2ven; ?>"><?php echo $text_download; ?></a></li>
				  <li><a href="<?php echo $info2ven; ?>"><?php echo $text_information; ?></a></li>
				</ul>
			  </li>
			  <li><a class="top"><?php echo $text_vendor_sales; ?></a>
				<ul>
					<li><a href="<?php echo $ven_sale_order; ?>"><?php echo $text_vendor_sales_orders; ?></a></li>
					<li><a href="<?php echo $ven_transaction; ?>"><?php echo $text_vendor_transaction; ?></a></li>
				</ul>
			  </li>
			  <li><a class="top"><?php echo $text_reports; ?></a>
				<ul>
					<li><a href="<?php echo $vendor_product_viewed; ?>"><?php echo $text_report_product_viewed; ?></a></li>
					<li><a href="<?php echo $vendor_product_purchased; ?>"><?php echo $text_report_product_purchased; ?></a></li>
				</ul>
			  </li>
			  <li><a class="top"><?php echo $text_vendor_personal; ?></a>
				<ul>
					<li><a href="<?php echo $update_vendor_profile; ?>"><?php echo $text_vendor_update_profile; ?></a></li>
					<li><a href="<?php echo $user_password; ?>"><?php echo $text_vendor_update_password; ?></a></li>
				</ul>
			  </li>
			</ul>
			<?php } ?>
			]]></add>
		</operation>
	</file>
	
	<file name="admin/view/template/common/home.tpl">
		<operation error="skip">
			<search position="after" offset="1"><![CDATA[
			<td><?php echo $total_sale_year; ?></td>
			]]></search>
			<add><![CDATA[
			<?php if ($this->user->getVP()) { ?>
			<tr>
              <td><?php echo $text_total_shipping; ?></td>
              <td><?php echo $total_shipping; ?></td>
            </tr>
			<?php } ?>
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after" offset="1"><![CDATA[
			<td><?php echo $total_order; ?></td>
			]]></search>
			<add><![CDATA[
			<!--code start-modify-->
			<?php if ($this->user->getVP()) { ?>
			<tr>
              <td><?php echo $text_total_product; ?></td>
              <td><?php echo $total_product; ?></td>
            </tr>
			<?php if ($this->config->get('vendor_product_approval')) { ?>
			<tr>
              <td><?php echo $text_total_product_pendding; ?></td>
              <td><a href="<?php echo $view_product_pendding; ?>"><?php echo $total_product_pendding; ?></a></td>
            </tr>
			<?php } ?>
			<?php } else { ?>
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after" offset="1"><![CDATA[
			<td><?php echo $total_affiliate_approval; ?></td>
			]]></search>
			<add><![CDATA[
			<?php if ($this->config->get('vendor_product_approval')) { ?>
			<tr>
              <td><?php echo $text_total_product_approval; ?></td>
              <td><a href="<?php echo $view_product_approval; ?>"><?php echo $total_product_approval; ?></a></td>
            </tr>
			<?php } ?>
			<?php if(!$this->config->get('signup_auto_approval')) { ?>
			<tr>
              <td><?php echo $text_total_vendor_approval; ?></td>
              <td><a href="<?php echo $view_vendor_approval; ?>"><?php echo $total_vendor_approval; ?></a></td>
            </tr>
			<?php } ?>
			<?php } ?>
			]]></add>
		</operation>
	</file>
	
	<file name="admin/view/template/sale/order_info.tpl">
		<operation error="skip">
			<search position="after" offset="1"><![CDATA[
			<td><input type="checkbox" name="notify" value="1" /></td>
			]]></search>
			<add><![CDATA[
			<tr>
		  	<td><?php echo $entry_sent_comment_to_all; ?></td>
            <td><input type="checkbox" name="sent_comment_to_all" value="1" /></td>
		    </tr>
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="replace"><![CDATA[
			'&notify=' + encodeURIComponent($('input[name=\'notify\']').attr('checked') ? 1 : 0)
			]]></search>
			<add trim="true"><![CDATA[
			'&notify=' + encodeURIComponent($('input[name=\'notify\']').attr('checked') ? 1 : 0) + '&sent_comment_to_all=' + encodeURIComponent($('input[name=\'sent_comment_to_all\']').attr('checked') ? 1 : 0)
			]]></add>
		</operation>
	</file>
	
	<file name="admin/view/template/user/user_form.tpl">
		<operation error="skip">
			<search position="before" offset="1" index="1"><![CDATA[
			<td><?php echo $entry_status; ?></td>
			]]></search>
			<add><![CDATA[
			<!--
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after" offset="3"><![CDATA[
			<option value="1"><?php echo $text_enabled; ?></option>
			]]></search>
			<add><![CDATA[
			-->
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after" offset="2"><![CDATA[
			<span class="error"><?php echo $error_confirm; ?></span>
			]]></search>
			<add><![CDATA[
			<tr>
            <td><?php echo $entry_status; ?></td>
            <td><select name="status">
				<?php if ($status != 5) { ?>
					<?php if ($status) { ?>
						<option value="0"><?php echo $text_disabled; ?></option>
						<option value="1" selected="selected"><?php echo $text_enabled; ?></option>
						<option value="5"><?php echo $txt_pending_approval; ?></option>
					<?php } else { ?>
						<option value="0" selected="selected"><?php echo $text_disabled; ?></option>
						<option value="1"><?php echo $text_enabled; ?></option>
						<option value="5"><?php echo $txt_pending_approval; ?></option>
					<?php } ?>
				<?php } else { ?>
					<option value="0"><?php echo $text_disabled; ?></option>
					<option value="1"><?php echo $text_enabled; ?></option>
					<option value="5" selected="selected"><?php echo $txt_pending_approval; ?></option>
				<?php } ?>
              </select></td>
			</tr>
			<tr>
				<td><?php if (!$folder_path) { echo $entry_folder_path; } else { echo $entry_folder_path_remove; } ?>
				</td>
				<td><?php if (!$folder_path) { ?>
					<input type="checkbox" name="generate_path" value="1" />
					<?php } else { ?>
					<input type="checkbox" name="remove_path" value="1" /><font color="red"><?php echo '<b>( ' . $text_remove . ' ' . $folder_path . ' )</b>'; ?></font>
					<?php } ?>
				</td>
			</tr>
			<tr>
				<td><?php echo $entry_vendor; ?></td>
				<td><select name="vendor_product">
					<option value="" selected="selected"><?php echo $text_none; ?></option>
					<?php foreach ($vendor_List as $vendor) { ?>
					<?php if ($vendor['vendor_id'] == $vendor_product) { ?>
					<option value="<?php echo $vendor['vendor_id']; ?>" selected="selected"><?php echo $vendor['name']; ?></option>
					<?php } else { ?>
					<option value="<?php echo $vendor['vendor_id']; ?>"><?php echo $vendor['name']; ?></option>
					<?php } ?>
					<?php } ?>
				  </select>
			</tr>
			<tr>
				<td><?php echo $entry_category; ?></td>
				<td><div class="scrollbox">
					<?php $class = 'odd'; ?>
					  <?php foreach ($categories as $category) { ?>
					  <?php $class = ($class == 'even' ? 'odd' : 'even'); ?>
					  <div class="<?php echo $class; ?>">
						<?php if ($vendor_category) { ?>
							<?php if (in_array($category['category_id'], $vendor_category)) { ?>
								<input type="checkbox" name="vendor_category[]" value="<?php echo $category['category_id']; ?>" checked="checked" /><?php echo $category['name']; ?>
							<?php } else { ?>
								<input type="checkbox" name="vendor_category[]" value="<?php echo $category['category_id']; ?>" /><?php echo $category['name']; ?>
							<?php } ?>
						<?php } else { ?>
							<input type="checkbox" name="vendor_category[]" value="<?php echo $category['category_id']; ?>" /><?php echo $category['name']; ?>
						<?php } ?>
					  </div>
					  <?php } ?>
					</div>
					<a onclick="$(this).parent().find(':checkbox').attr('checked', true);"><?php echo $text_select_all; ?></a> / <a onclick="$(this).parent().find(':checkbox').attr('checked', false);"><?php echo $text_unselect_all; ?></a></td>
			</tr>
			  
			<tr>
				<td><?php echo $entry_store; ?></td>
				<td><div class="scrollbox">
					  <?php $class = 'even'; ?>
					  <div class="<?php echo $class; ?>">
						<?php if ($product_store) { ?>
							<?php if (in_array(0, $product_store)) { ?>
								<input type="checkbox" name="product_store[]" value="0" checked="checked" />
								<?php echo $text_default; ?>
							<?php } else { ?>
								<input type="checkbox" name="product_store[]" value="0" />
								<?php echo $text_default; ?>
							<?php } ?>
						<?php } else { ?>
							<input type="checkbox" name="product_store[]" value="0" />
							<?php echo $text_default; ?>
						<?php } ?>
					  </div>
					 <?php foreach ($stores as $store) { ?>
					  <?php $class = ($class == 'even' ? 'odd' : 'even'); ?>
					  <div class="<?php echo $class; ?>">
						<?php if ($product_store) { ?>
							<?php if (in_array($store['store_id'], $product_store)) { ?>
								<input type="checkbox" name="product_store[]" value="<?php echo $store['store_id']; ?>" checked="checked" /><?php echo $store['name']; ?>
							<?php } else { ?>
								<input type="checkbox" name="product_store[]" value="<?php echo $store['store_id']; ?>" /><?php echo $store['name']; ?>
							<?php } ?>
						<?php } else { ?>
							<input type="checkbox" name="product_store[]" value="<?php echo $store['store_id']; ?>" /><?php echo $store['name']; ?>
						<?php } ?>
					  </div>
					  <?php } ?>
					</div>
					<a onclick="$(this).parent().find(':checkbox').attr('checked', true);"><?php echo $text_select_all; ?></a> / <a onclick="$(this).parent().find(':checkbox').attr('checked', false);"><?php echo $text_unselect_all; ?></a></td>
			</tr>
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/controller/checkout/confirm.php">
		<operation error="skip">
			<search position="before"><![CDATA[
			$product_data[] = array(
			]]></search>
			<add><![CDATA[
			/*code start*/
			$get_vendor_id = $this->db->query("SELECT v.vendor AS vendor, cm.commission_type AS commission_type, cm.commission AS commission FROM `" . DB_PREFIX . "vendor` v LEFT JOIN `" . DB_PREFIX . "vendors` vds ON (v.vendor = vds.vendor_id) LEFT JOIN `" . DB_PREFIX . "commission` cm ON (vds.commission_id = cm.commission_id) WHERE v.vproduct_id = '" . (int)$product['product_id'] . "'");
			
			if (isset($get_vendor_id->row['vendor'])) {
				switch ($get_vendor_id->row['commission_type']) {
					case '0':
					$commission = (float)$product['total']*((float)$get_vendor_id->row['commission']/100);
					$vendor_id = $get_vendor_id->row['vendor'];
					$vendor_total = (float)$product['total']*(1-((float)$get_vendor_id->row['commission'])/100);
					$vendor_tax = $this->tax->getTax($vendor_total, $product['tax_class_id']);
					$store_tax = $this->tax->getTax($product['total']-$vendor_total, $product['tax_class_id']);
					break;
						
					case '1':
					$commission = (float)$get_vendor_id->row['commission'];
					$vendor_id = $get_vendor_id->row['vendor'];
					$vendor_total = (float)($product['total']-($get_vendor_id->row['commission']));
					$vendor_tax = $this->tax->getTax($vendor_total, $product['tax_class_id']);
					$store_tax = $this->tax->getTax($product['total']-$vendor_total, $product['tax_class_id']);
					break;
						
					case '2': 					
					$comrate = explode(':',$get_vendor_id->row['commission']);
					$commission = ((float)$product['total']*((float)$comrate[0]/100))+(float)$comrate[1];
					$vendor_id = $get_vendor_id->row['vendor'];
					$vendor_total = (float)$product['total']-$commission;
					$vendor_tax = $this->tax->getTax($vendor_total, $product['tax_class_id']);
					$store_tax = $this->tax->getTax($product['total']-$vendor_total, $product['tax_class_id']);
					break;
						
					case '3':
					$comrate = explode(':',$get_vendor_id->row['commission']);
					$commission = ((float)$product['total']+(float)$comrate[0])*((float)$comrate[1]/100);
					$vendor_id = $get_vendor_id->row['vendor'];
					$vendor_total = (float)$product['total']-$commission;
					$vendor_tax = $this->tax->getTax($vendor_total, $product['tax_class_id']);
					$store_tax = $this->tax->getTax($product['total']-$vendor_total, $product['tax_class_id']);
					break;
				}
			} else {
				$commission = '0';
				$vendor_id = '0';
				$vendor_total = '0';
				$vendor_tax = '0';
				$store_tax = '0';
			}
				
			if (!$this->config->get('tax_status')) {
				$vendor_tax = '0';
				$store_tax = '0';
			}
			/*code end*/
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after" index="1"><![CDATA[
			'subtract'   => $product['subtract'],
			]]></search>
			<add><![CDATA[
			/*code start*/
			'commission' 	=> $commission,
			'vendor_id'  	=> $vendor_id,
			'vendor_total' 	=> $vendor_total,
			'store_tax'	 	=> $store_tax,
			'vendor_tax' 	=> $vendor_tax,
			/*code end*/
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/controller/onecheckout/confirm.php">
		<operation error="skip">
			<search position="before" index="1"><![CDATA[
			$product_data[] = array(
			]]></search>
			<add><![CDATA[
			/*code start*/
			$get_vendor_id = $this->db->query("SELECT v.vendor AS vendor, cm.commission_type AS commission_type, cm.commission AS commission FROM `" . DB_PREFIX . "vendor` v LEFT JOIN `" . DB_PREFIX . "vendors` vds ON (v.vendor = vds.vendor_id) LEFT JOIN `" . DB_PREFIX . "commission` cm ON (vds.commission_id = cm.commission_id) WHERE v.vproduct_id = '" . (int)$product['product_id'] . "'");
			
			if (isset($get_vendor_id->row['vendor'])) {
				switch ($get_vendor_id->row['commission_type']) {
					case '0':
					$commission = (float)$product['total']*((float)$get_vendor_id->row['commission']/100);
					$vendor_id = $get_vendor_id->row['vendor'];
					$vendor_total = (float)$product['total']*(1-((float)$get_vendor_id->row['commission'])/100);
					$vendor_tax = $this->tax->getTax($vendor_total, $product['tax_class_id']);
					$store_tax = $this->tax->getTax($product['total']-$vendor_total, $product['tax_class_id']);
					break;
						
					case '1':
					$commission = (float)$get_vendor_id->row['commission'];
					$vendor_id = $get_vendor_id->row['vendor'];
					$vendor_total = (float)($product['total']-($get_vendor_id->row['commission']));
					$vendor_tax = $this->tax->getTax($vendor_total, $product['tax_class_id']);
					$store_tax = $this->tax->getTax($product['total']-$vendor_total, $product['tax_class_id']);
					break;
						
					case '2': 					
					$comrate = explode(':',$get_vendor_id->row['commission']);
					$commission = ((float)$product['total']*((float)$comrate[0]/100))+(float)$comrate[1];
					$vendor_id = $get_vendor_id->row['vendor'];
					$vendor_total = (float)$product['total']-$commission;
					$vendor_tax = $this->tax->getTax($vendor_total, $product['tax_class_id']);
					$store_tax = $this->tax->getTax($product['total']-$vendor_total, $product['tax_class_id']);
					break;
						
					case '3':
					$comrate = explode(':',$get_vendor_id->row['commission']);
					$commission = ((float)$product['total']+(float)$comrate[0])*((float)$comrate[1]/100);
					$vendor_id = $get_vendor_id->row['vendor'];
					$vendor_total = (float)$product['total']-$commission;
					$vendor_tax = $this->tax->getTax($vendor_total, $product['tax_class_id']);
					$store_tax = $this->tax->getTax($product['total']-$vendor_total, $product['tax_class_id']);
					break;
				}
			} else {
				$commission = '0';
				$vendor_id = '0';
				$vendor_total = '0';
				$vendor_tax = '0';
				$store_tax = '0';
			}
				
			if (!$this->config->get('tax_status')) {
				$vendor_tax = '0';
				$store_tax = '0';
			}
			/*code end*/
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after" index="2"><![CDATA[
			'subtract'   => $product['subtract'],
			]]></search>
			<add><![CDATA[
			/*code start*/
			'commission' 	=> $commission,
			'vendor_id'  	=> $vendor_id,
			'vendor_total' 	=> $vendor_total,
			'store_tax'	 	=> $store_tax,
			'vendor_tax' 	=> $vendor_tax,
			/*code end*/
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/controller/common/header.php">
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->data['text_checkout'] = $this->language->get('text_checkout');
			]]></search>
			<add><![CDATA[
			$this->data['signup'] = $this->url->link('account/signup');
			$this->data['txt_signup'] = $this->language->get('txt_signup');
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/language/english/common/header.php">
		<operation error="skip">
			<search position="after"><![CDATA[
			$_['text_account']        = 'My Account';
			]]></search>
			<add><![CDATA[
			$_['txt_signup'] 	= 'Sign Up As Vendor';
			]]></add>
		</operation>
	</file>
	
	<file name="catalog/model/checkout/order.php">
		<operation error="skip">
			<search position="replace"><![CDATA[
			$this->db->query("INSERT INTO " . DB_PREFIX . "order_product SET order_id = '" . (int)$order_id . "', product_id = '" . (int)$product['product_id'] . "', name = '" . $this->db->escape($product['name']) . "', model = '" . $this->db->escape($product['model']) . "', quantity = '" . (int)$product['quantity'] . "', price = '" . (float)$product['price'] . "', total = '" . (float)$product['total'] . "', tax = '" . (float)$product['tax'] . "', reward = '" . (int)$product['reward'] . "'");
 			]]></search>
			<add><![CDATA[
			/*code start*/
			$this->db->query("INSERT INTO " . DB_PREFIX . "order_product SET order_id = '" . (int)$order_id . "', product_id = '" . (int)$product['product_id'] . "', name = '" . $this->db->escape($product['name']) . "', model = '" . $this->db->escape($product['model']) . "', quantity = '" . (int)$product['quantity'] . "', price = '" . (float)$product['price'] . "', total = '" . (float)$product['total'] . "', tax = '" . (float)$product['tax'] . "', vendor_id = '" . (int)$product['vendor_id'] . "', commission =  '" . (float)$product['commission'] . "', vendor_total = '" . (float)$product['vendor_total'] . "', vendor_tax = '" . (float)$product['vendor_tax'] . "', store_tax = '" . (float)$product['store_tax'] . "',reward = '" . (int)$product['reward'] . "'");
			/*code end*/
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after" offset="1"><![CDATA[
			$this->db->query("INSERT INTO " . DB_PREFIX . "order_download SET order_id = '" . (int)$order_id . "', order_product_id = '" . (int)$order_product_id . "', name = '" . $this->db->escape($download['name']) . "', filename = '" . $this->db->escape($download['filename']) . "', mask = '" . $this->db->escape($download['mask']) . "', remaining = '" . (int)($download['remaining'] * $product['quantity']) . "'");
			]]></search>
			<add><![CDATA[
			/*Get Vendor ID*/
			$getVenId = $this->db->query("SELECT vs.vendor_id AS vendor_id FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "vendor v ON (p.product_id = v.vproduct_id) LEFT JOIN " . DB_PREFIX . "vendors vs ON (v.vendor = vs.vendor_id) WHERE p.product_id = '" . (int)$product['product_id'] . "'");
			$getVenIds[] = array ('vendor_id' => $getVenId->row['vendor_id']);
			/*Get Vendor ID*/
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			foreach ($data['vouchers'] as $voucher) {
			]]></search>
			<add><![CDATA[
			/*Add shipping fee per vendor*/
			$vendor_cost = $this->getdescost();	
			$getUniVenId = array_map("unserialize", array_unique(array_map("serialize", $getVenIds)));
			foreach ($getUniVenId as $vendor) {
				if ($vendor['vendor_id']) {
					if ($this->session->data['shipping_method']['code'] == 'mvweight.mvweight') {
						$scost = 0;
						$sweight = 0;
									
						foreach ($vendor_cost as $vsc) {
							if ($vendor['vendor_id'] == $vsc['vendor_id']) {
								$scost = $vsc['cost'];
								$sweight = $vsc['weight'];
							}
						}
						
						if ($this->config->get('mvweight_tax_class_id')) {
							$shipping_tax = $this->tax->calculate($scost, $this->config->get('mvweight_tax_class_id'), $this->config->get('config_tax')) - $scost;
						} else {
							$shipping_tax = '0';
						}
						
						$this->db->query("INSERT INTO " . DB_PREFIX . "order_shipping SET order_id = '" . (int)$order_id . "', vendor_id =  '" . (int)$vendor['vendor_id'] . "', title = 'Weight Base Shipping', cost =  '" . (float)$scost . "', tax =  '" . (float)$shipping_tax . "', weight = '" . (float)$sweight . "'");
					
					} elseif ($this->session->data['shipping_method']['code'] == 'mvflat.mvflat') {			
						$mv_flat = $this->mv_flat_shipping();			
						$scost = 0;
						$sweight = 0;
		
						foreach ($mv_flat as $mvflat) {
							if ($vendor['vendor_id'] == $mvflat['vendor']) {
								$scost += $mvflat['cost'];
								$sweight += $mvflat['weight'];
							}
						}
						
						if ($this->config->get('mvflat_tax_class_id')) {
							$shipping_tax = $this->tax->calculate($scost, $this->config->get('mvflat_tax_class_id'), $this->config->get('config_tax')) - $scost;
						} else {
							$shipping_tax = '0';
						}
						
						$this->db->query("INSERT INTO " . DB_PREFIX . "order_shipping SET order_id = '" . (int)$order_id . "', vendor_id =  '" . (int)$vendor['vendor_id'] . "', title = 'Flat Rate Shipping', tax =  '" . (float)$shipping_tax . "', cost =  '" . (float)$scost . "', weight = '" . (float)$sweight . "'");
					}
				}
			}
			/*Add shipping fee per vendor*/
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->db->query("UPDATE " . DB_PREFIX . "product SET quantity = (quantity - " . (int)$order_product['quantity'] . ") WHERE product_id = '" . (int)$order_product['product_id'] . "' AND subtract = '1'");
			]]></search>
			<add><![CDATA[
			/*code start*/
			$option_data_vendor = array();
			$order_option_vendor_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "order_option` WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . (int)$order_product['order_product_id'] . "'");
			foreach ($order_option_vendor_query->rows as $option) {
			  if ($option['type'] != 'file') {
				$option_data_vendor[] = array(
				  'name'  => $option['name'],
				  'value' => (strlen($option['value']) > 20 ? substr($option['value'], 0, 20) . '..' : $option['value'])
				);
			  } else {
				  $filename = substr($option['value'], 0, strrpos($option['value'], '.'));
				  $option_data_vendor[] = array(
				  'name'  => $option['name'],
				  'value' => (strlen($filename) > 20 ? substr($filename, 0, 20) . '..' : $filename)
				);	
			  }
			}
				
			$vmail = $this->db->query("SELECT pd.name AS name, p.model AS model, p.sku AS sku, vs.email AS email, vs.vendor_id AS vendor_id FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "vendor v ON (pd.product_id = v.vproduct_id) LEFT JOIN " . DB_PREFIX . "vendors vs ON (v.vendor = vs.vendor_id) WHERE p.product_id = '" . (int)$order_product['product_id'] . "'");
				$vendor_products[] = array (
					'name'  	=> $vmail->row['name'],
					'option'	=> $option_data_vendor,
					'model' 	=> $vmail->row['model'],
					'sku' 		=> $vmail->row['sku'],
					'price'		=> $order_product['price'],
					'quantity'	=> $order_product['quantity'],
					'total'		=> $order_product['total'],
					'tax'		=> $order_product['tax'],
					'vendor_id'	=> $vmail->row['vendor_id'],
					'email'		=> $vmail->row['email']
				);
					
				$vendor_list[] = array ('vendor_id' => $vmail->row['vendor_id']);
				$this->db->query("INSERT INTO " . DB_PREFIX . "order_status_vendor_update SET order_id = '" . (int)$order_id . "', order_status_id = '" . (int)$order_status_id . "', vendor_id = '" . (int)$vmail->row['vendor_id'] . "', product_id = '" . (int)$order_product['order_product_id'] . "'");
			/*code end*/
			]]></add>
		</operation>
		<operation error="skip">
			<search position="after"><![CDATA[
			$this->cache->delete('product');
			]]></search>
			<add><![CDATA[
			/*code start*/
			$vendor_unique = array_map("unserialize", array_unique(array_map("serialize", $vendor_list))); 			
			if (($this->config->get('vendor_email_status')) && (in_array((int)$order_status_id,$this->config->get('vendor_checkout_order_status')))) {
				if ($vendor_products){
					$vendor_cost = $this->getdescost();					
					foreach ($vendor_unique as $vendor) {
						if ($vendor['vendor_id']) {
							$vemail = $this->db->query("SELECT *, CONCAT(firstname,' ',lastname) AS contact_name FROM `" . DB_PREFIX . "vendors` WHERE vendor_id = '" . (int)$vendor['vendor_id'] . "'");
							$cust_order_status_query = $this->db->query("SELECT name FROM " . DB_PREFIX . "order_status WHERE order_status_id = '" . (int)$order_status_id . "' AND language_id = '" . (int)$order_info['language_id'] . "'");
							$language = new Language($order_info['language_directory']);
							$language->load($order_info['language_filename']);
							$language->load('mail/vendor_email');
							$template = new Template();
							
							$mail = new Mail(); 
							$mail->protocol = $this->config->get('config_mail_protocol');
							$mail->parameter = $this->config->get('config_mail_parameter');
							$mail->hostname = $this->config->get('config_smtp_host');
							$mail->username = $this->config->get('config_smtp_username');
							$mail->password = $this->config->get('config_smtp_password');
							$mail->port = $this->config->get('config_smtp_port');
							$mail->timeout = $this->config->get('config_smtp_timeout');
							$mail->setTo($vemail->row['email']);
							$mail->setFrom($this->config->get('config_email'));
							$mail->setSender($this->config->get('config_name'));
							$mail->setSubject($language->get('text_vendor_email_subject') . $this->config->get('config_title'));
									
							$template->data['text_order_details'] = $language->get('text_order_details');
							$template->data['text_shipping_address'] = "<b>" . $language->get('text_shipping_address') . "</b><br/>";
							$template->data['date_ordered'] = '<b>' . $language->get('text_date_ordered') . ' </b>' . date('F j\, Y') . '<br/>';
							$template->data['logo'] = HTTP_IMAGE . $this->config->get('config_logo');
							$template->data['store_name'] = $order_info['store_name'];
							$template->data['store_url'] = $order_info['store_url'];
							
							/*Show header title*/
							$template->data['title'] = sprintf($language->get('text_new_subject'), html_entity_decode($order_info['store_name'], ENT_QUOTES, 'UTF-8'), $order_id);		
							
							/*show vendor name*/
							$template->data['vendor_name'] = '<b>' . $language->get('text_title') . $vemail->row['contact_name'] . '</b>,' . "\n\n";
							
							/*show message to vendor*/
							$template->data['vendor_message'] = $this->config->get('vendor_email_message') . "\n\n";
																				
							/*show vendor customer order id*/
							if ($this->config->get('vendor_cust_order_id')) {
								$template->data['order_id'] = '<b>' . $language->get('text_vendor_order_id') . '</b>' . $order_id . '<br/>';
							} else {
								$template->data['order_id'] = '';
							}
							
							/*show vendor customer order status*/
							if ($this->config->get('vendor_cust_order_status')) {
								$template->data['order_status'] = '<b>' . $language->get('text_order_status') . ' </b>' . $cust_order_status_query->row['name'] . '<br/>';
							} else {
								$template->data['order_status'] = '';
							}
							
							/*show payment method*/
							if ($this->config->get('vendor_cust_payment_method')) {
								$template->data['payment_method'] = '<b>' . $language->get('text_payment_method') . ' </b>' . $order_info['payment_method'] . '<br/>';
							} else {
								$template->data['payment_method'] = '';
							}
							
							/*show vendor customer email*/
							if ($this->config->get('vendor_cust_email')) {
								$template->data['email_address'] = '<b>' . $language->get('text_email') . ' </b>' . $order_info['email'] . '<br/>';
							} else {
								$template->data['email_address'] = '';
							}
							
							/*show vendor customer telephone*/
							if ($this->config->get('vendor_cust_telephone')) {
								$template->data['telephone'] = '<b>' . $language->get('text_telephone') . ' </b>' . $order_info['telephone'] . '<br/>';
							} else {
								$template->data['telephone'] = '';
							}
							
							/*show vendor customer shipping address*/
							if ($this->config->get('vendor_cust_shipping_address')) {
								if (($order_info['shipping_firstname']) && ($order_info['shipping_address_1'])) { 
									$format = '<b>{firstname} {lastname}</b>' . "\n" . '{company}' . "\n" . '{address_1}' . "\n" . '{address_2}' . "\n" . '{city}, {postcode}' . "\n" . '{zone}, {country}';
									$find = array(
									'{firstname}',
									'{lastname}',
									'{company}',
									'{address_1}',
									'{address_2}',
									'{city}',
									'{postcode}',
									'{zone}',
									'{zone_code}',
									'{country}'
									);
								
									$replace = array(
										'firstname' => $order_info['shipping_firstname'],
										'lastname'  => $order_info['shipping_lastname'],
										'company'   => $order_info['shipping_company'],
										'address_1' => $order_info['shipping_address_1'],
										'address_2' => $order_info['shipping_address_2'],
										'city'      => $order_info['shipping_city'],
										'postcode'  => $order_info['shipping_postcode'],
										'zone'      => $order_info['shipping_zone'],
										'zone_code' => $order_info['shipping_zone_code'],
										'country'   => $order_info['shipping_country']  
									);
									$template->data['cust_shipping_address'] = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));
								} else {
									$format = '<b>{firstname} {lastname}</b>' . "\n" . '{company}' . "\n" . '{address_1}' . "\n" . '{address_2}' . "\n" . '{city}, {postcode}' . "\n" . '{zone}, {country}';
									$find = array(
										'{firstname}',
										'{lastname}',
										'{company}',
										'{address_1}',
										'{address_2}',
										'{city}',
										'{postcode}',
										'{zone}',
										'{zone_code}',
										'{country}'
									);
								
									$replace = array(
										'firstname' => $order_info['payment_firstname'],
										'lastname'  => $order_info['payment_lastname'],
										'company'   => $order_info['payment_company'],
										'address_1' => $order_info['payment_address_1'],
										'address_2' => $order_info['payment_address_2'],
										'city'      => $order_info['payment_city'],
										'postcode'  => $order_info['payment_postcode'],
										'zone'      => $order_info['payment_zone'],
										'zone_code' => $order_info['payment_zone_code'],
										'country'   => $order_info['payment_country']  
									);
									$template->data['cust_shipping_address'] = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));
								}
							} else {
								$template->data['cust_shipping_address'] = '';
							}
							
							/*show vendor information*/
							if ($this->config->get('vendor_address')) {
								$template->data['show_vendor_contact'] = True;
								$format = '<b>{firstname} {lastname}</b>' . "\n" . '{company}' . "\n" . '{address_1}' . "\n" . '{address_2}' . "\n" . '{city}, {postcode}' . "\n" . '{zone}, {country}';
									$find = array(
										'{firstname}',
										'{lastname}',
										'{company}',
										'{address_1}',
										'{address_2}',
										'{city}',
										'{postcode}',
										'{zone}',
										'{country}'
									);
									
								$zone_name = $this->db->query("SELECT name FROM " . DB_PREFIX . "zone WHERE zone_id = '" . (int)$vemail->row['zone_id'] . "' AND country_id = '" . (int)$vemail->row['country_id'] . "'");			
								$country_name = $this->db->query("SELECT name FROM " . DB_PREFIX . "country WHERE country_id = '" . (int)$vemail->row['country_id'] . "'");	
								
									$replace = array(
										'firstname' => $vemail->row['firstname'],
										'lastname'  => $vemail->row['lastname'],
										'company'   => $vemail->row['company'],
										'address_1' => $vemail->row['address_1'],
										'address_2' => $vemail->row['address_2'],
										'city'      => $vemail->row['city'],
										'postcode'  => $vemail->row['postcode'],
										'zone'  	=> isset($zone_name->row['name']) ? $zone_name->row['name'] : 'None',
										'country'   => $country_name->row['name']
									);
									
								$vendor_address = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));
										
								$template->data['vendor_address'] = $vendor_address . '<br/>';
								$template->data['text_vendor_contact'] = $language->get('text_vendor_contact');
								
								/*show vendor email*/
								if ($this->config->get('vendor_email')) {
									$template->data['vendor_email'] = '<b>' . $language->get('text_email') . ' </b>' . $vemail->row['email'] . '<br/>';
								} else {
									$template->data['vendor_email'] = '';
								}
								
								/*show vendor telephone*/
								if ($this->config->get('vendor_telephone')) {
									$template->data['vendor_telephone'] = '<b>' . $language->get('text_telephone') . ' </b>' . $vemail->row['telephone'] . '<br/>';
								} else {
									$template->data['vendor_telephone'] = '';
								}
				
							} else {
								$template->data['show_vendor_contact'] = False;
							}
							/*end show vendor address*/
							
							$subtotal = 0;
							$vsubtotal = $this->db->query("SELECT SUM(total) AS sum_product_total, SUM(quantity*tax) as sum_product_tax FROM " . DB_PREFIX . "order_product op LEFT JOIN " . DB_PREFIX . "vendor v ON ( op.product_id = v.vproduct_id ) WHERE v.vendor =  '" . (int)$vendor['vendor_id'] . "' AND op.order_id =  '" . (int)$order_id . "'");
							$subtotal = $vsubtotal->row['sum_product_total'];
							$vat = $this->db->query("SELECT title FROM " . DB_PREFIX . "order_total WHERE order_id = '" . (int)$order_id . "' AND code = 'tax'");
							
							/*Get Shipping Cost*/
							$shipcost = $this->db->query("SELECT * FROM `" . DB_PREFIX . "order_shipping` WHERE vendor_id = '" . (int)$vendor['vendor_id'] . "' AND order_id = '" . (int)$order_id . "'");
							
							if ($this->config->get('tax_status') && ($vsubtotal->row['sum_product_tax'] != 0)) {
								$template->data['text_tax'] = $vat->row['title'];
								$template->data['tax'] = $this->currency->format($vsubtotal->row['sum_product_tax'] + (isset($shipcost->row['tax']) ? $shipcost->row['tax'] : '0'));
							} else {
								$template->data['tax'] = '0';
							}
								
							if ($shipcost->rows) {
								if ($shipcost->row['cost']) {
									$total = $vsubtotal->row['sum_product_total'] + $shipcost->row['cost'] + ($this->config->get('tax_status') ? ($vsubtotal->row['sum_product_tax'] + $shipcost->row['tax']): 0);
								} else {
									$total = $vsubtotal->row['sum_product_total'] + ($this->config->get('tax_status') ? $vsubtotal->row['sum_product_tax']: 0);
								}
								
								$template->data['shipping'] = $shipcost->row['title'] . ' (' . $this->weight->format($shipcost->row['weight'], $this->config->get('config_weight_class_id')) . ')';
								$template->data['scost'] = $this->currency->format($shipcost->row['cost']);
								
							} else {
								$total = $vsubtotal->row['sum_product_total'] + ($this->config->get('tax_status') ? $vsubtotal->row['sum_product_tax']: 0);
								$template->data['scost'] = 0;
							}
									
							/*END Get Shipping Cost*/
										
							foreach ($vendor_products as $vendor_product) {
								if ($vendor['vendor_id'] == $vendor_product['vendor_id']) {
									$template->data['vendor_products'][] = array(
										'name'     => $vendor_product['name'],
										'option'   => $vendor_product['option'],
										'model'    => $vendor_product['model'],
										'sku'	   => $vendor_product['sku'],
										'price'	   => $this->currency->format($vendor_product['price'] + ($this->config->get('tax_status') ? $vendor_product['tax'] : 0)),
										'quantity' => $vendor_product['quantity'],
										'total'	   => $this->currency->format($vendor_product['total'] + ($this->config->get('tax_status') ? ($vendor_product['tax'] * $vendor_product['quantity']) : 0)),
										'email'    => $vendor_product['email']
									);
								}
							}
							
							$template->data['product'] = $language->get('column_product');
							$template->data['model'] = $language->get('column_model');
							$template->data['quantity'] = $language->get('column_quantity');
							$template->data['unit_price'] = $language->get('column_unit_price');
							$template->data['total'] = $language->get('column_total');
							$template->data['subtotal'] = $language->get('column_subtotal');
							$template->data['vendor_auto_msg'] = $language->get('text_vendor_auto_msg');
							$template->data['vendor_alert'] = $language->get('text_vendor_email') . $this->config->get('config_title');
							$template->data['vsubtotal'] = $this->currency->format($subtotal);
							$template->data['vtotal'] = $this->currency->format($total);
							
							if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/mail/vendor_email.tpl')) {
								$html = $template->fetch($this->config->get('config_template') . '/template/mail/vendor_email.tpl');
							} else {
								$html = $template->fetch('default/template/mail/vendor_email.tpl');
							}
						
							$mail->setHtml($html);
							$mail->send();
						} 
					}
				}
			} else {
				/*Get Shipping Cost*/
					$shipcost = $this->db->query("SELECT * FROM `" . DB_PREFIX . "order_shipping` WHERE vendor_id = '" . (int)$vendor['vendor_id'] . "' AND order_id = '" . (int)$order_id . "'");
							
					if ($this->config->get('tax_status') && ($vsubtotal->row['sum_product_tax'] != 0)) {
						$template->data['text_tax'] = $vat->row['title'];
						$template->data['tax'] = $this->currency->format($vsubtotal->row['sum_product_tax'] + (isset($shipcost->row['tax']) ? $shipcost->row['tax'] : '0'));
					} else {
						$template->data['tax'] = '0';
					}
								
					if ($shipcost->rows) {
						if ($shipcost->row['cost']) {
							$total = $vsubtotal->row['sum_product_total'] + $shipcost->row['cost'] + ($this->config->get('tax_status') ? ($vsubtotal->row['sum_product_tax'] + $shipcost->row['tax']): 0);
						} else {
							$total = $vsubtotal->row['sum_product_total'] + ($this->config->get('tax_status') ? $vsubtotal->row['sum_product_tax']: 0);
						}
								
						$template->data['shipping'] = $shipcost->row['title'] . ' (' . $this->weight->format($shipcost->row['weight'], $this->config->get('config_weight_class_id')) . ')';
						$template->data['scost'] = $this->currency->format($shipcost->row['cost']);
								
					} else {
							$total = $vsubtotal->row['sum_product_total'] + ($this->config->get('tax_status') ? $vsubtotal->row['sum_product_tax']: 0);
							$template->data['scost'] = 0;
					}
				/*END Get Shipping Cost*/
			}
			/*code end*/
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before" index="1"><![CDATA[
			if ($notify) {
			]]></search>
			<add><![CDATA[
			/*code start*/
			if (($this->config->get('vendor_email_status')) && (in_array((int)$order_status_id,$this->config->get('vendor_checkout_order_status')))) {
				$order_product_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int)$order_id . "'");
				foreach ($order_product_query->rows as $order_product) {	
				    $option_data_vendor = array();
					$order_option_vendor_query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "order_option` WHERE order_id = '" . (int)$order_id . "' AND order_product_id = '" . (int)$order_product['order_product_id'] . "'");
					foreach ($order_option_vendor_query->rows as $option) {
						if ($option['type'] != 'file') {
						$option_data_vendor[] = array(
						  'name'  => $option['name'],
						  'value' => (strlen($option['value']) > 20 ? substr($option['value'], 0, 20) . '..' : $option['value'])
						);
						} else {
						$filename = substr($option['value'], 0, strrpos($option['value'], '.'));
						$option_data_vendor[] = array(
						  'name'  => $option['name'],
						  'value' => (strlen($filename) > 20 ? substr($filename, 0, 20) . '..' : $filename)
						);	
					  }
					}
					
					$vmail = $this->db->query("SELECT pd.name AS name, p.model AS model,p.sku AS sku,vs.email AS email, vs.vendor_id AS vendor_id FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "vendor v ON (pd.product_id = v.vproduct_id) LEFT JOIN " . DB_PREFIX . "vendors vs ON (v.vendor = vs.vendor_id) WHERE p.product_id = '" . (int)$order_product['product_id'] . "'");

					$vendor_products[] = array (
						'name'  	=> $vmail->row['name'],
						'option'	=> $option_data_vendor,
						'model' 	=> $vmail->row['model'],
						'sku' 		=> $vmail->row['sku'],
						'price'		=> $order_product['price'],
						'quantity'	=> $order_product['quantity'],
						'total'		=> $order_product['total'],
						'tax'		=> $order_product['tax'],
						'vendor_id'	=> $vmail->row['vendor_id'],
						'email'		=> $vmail->row['email']
					);
					$vendor_list[] = array ('vendor_id' => $vmail->row['vendor_id']);
				}
	
				if ($vendor_products){
					$vendor_unique = array_map("unserialize", array_unique(array_map("serialize", $vendor_list))); 
					foreach ($vendor_unique as $vendor) {
						if ($vendor['vendor_id']) {
							$vemail = $this->db->query("SELECT *, CONCAT(firstname,' ',lastname) AS contact_name FROM `" . DB_PREFIX . "vendors` WHERE vendor_id = '" . (int)$vendor['vendor_id'] . "'");
							$cust_order_status_query = $this->db->query("SELECT name FROM " . DB_PREFIX . "order_status WHERE order_status_id = '" . (int)$order_status_id . "' AND language_id = '" . (int)$order_info['language_id'] . "'");
							$language = new Language($order_info['language_directory']);
							$language->load($order_info['language_filename']);
							$language->load('mail/vendor_email');
							$template = new Template();
							
							$mail = new Mail();
							$mail->protocol = $this->config->get('config_mail_protocol');
							$mail->parameter = $this->config->get('config_mail_parameter');
							$mail->hostname = $this->config->get('config_smtp_host');
							$mail->username = $this->config->get('config_smtp_username');
							$mail->password = $this->config->get('config_smtp_password');
							$mail->port = $this->config->get('config_smtp_port');
							$mail->timeout = $this->config->get('config_smtp_timeout');
							$mail->setTo($vemail->row['email']);
							$mail->setFrom($this->config->get('config_email'));
							$mail->setSender($this->config->get('config_name'));
							$mail->setSubject($language->get('text_vendor_email_subject') . $this->config->get('config_title'));
													
							$template->data['text_order_details'] = $language->get('text_order_details');
							$template->data['text_shipping_address'] = "<b>" . $language->get('text_shipping_address') . "</b><br/>";
							$template->data['date_ordered'] = '<b>' . $language->get('text_date_ordered') . ' </b>' . date('F j\, Y') . '<br/>';
							$template->data['logo'] = HTTP_IMAGE . $this->config->get('config_logo');
							$template->data['store_name'] = $order_info['store_name'];
							$template->data['store_url'] = $order_info['store_url'];
							
							/*Show header title*/
							$template->data['title'] = sprintf($language->get('text_new_subject'), html_entity_decode($order_info['store_name'], ENT_QUOTES, 'UTF-8'), $order_id);		
							
							/*show vendor name*/
							$template->data['vendor_name'] = '<b>' . $language->get('text_title') . $vemail->row['contact_name'] . '</b>,' . "\n\n";
							
							/*show message to vendor*/
							$template->data['vendor_message'] = $this->config->get('vendor_email_message') . "\n\n";
																				
							/*show vendor customer order id*/
							if ($this->config->get('vendor_cust_order_id')) {
								$template->data['order_id'] = '<b>' . $language->get('text_vendor_order_id') . '</b>' . $order_id . '<br/>';
							} else {
								$template->data['order_id'] = '';
							}
							
							/*show vendor customer order status*/
							if ($this->config->get('vendor_cust_order_status')) {
								$template->data['order_status'] = '<b>' . $language->get('text_order_status') . ' </b>' . $cust_order_status_query->row['name'] . '<br/>';
							} else {
								$template->data['order_status'] = '';
							}
							
							/*show payment method*/
							if ($this->config->get('vendor_cust_payment_method')) {
								$template->data['payment_method'] = '<b>' . $language->get('text_payment_method') . ' </b>' . $order_info['payment_method'] . '<br/>';
							} else {
								$template->data['payment_method'] = '';
							}
							
							/*show vendor customer email*/
							if ($this->config->get('vendor_cust_email')) {
								$template->data['email_address'] = '<b>' . $language->get('text_email') . ' </b>' . $order_info['email'] . '<br/>';
							} else {
								$template->data['email_address'] = '';
							}
							
							/*show vendor customer telephone*/
							if ($this->config->get('vendor_cust_telephone')) {
								$template->data['telephone'] = '<b>' . $language->get('text_telephone') . ' </b>' . $order_info['telephone'] . '<br/>';
							} else {
								$template->data['telephone'] = '';
							}
							
							/*show vendor customer shipping address*/
							if ($this->config->get('vendor_cust_shipping_address')) {
								if (($order_info['shipping_firstname']) && ($order_info['shipping_address_1'])) { 
									$format = '<b>{firstname} {lastname}</b>' . "\n" . '{company}' . "\n" . '{address_1}' . "\n" . '{address_2}' . "\n" . '{city}, {postcode}' . "\n" . '{zone}, {country}';
									$find = array(
									'{firstname}',
									'{lastname}',
									'{company}',
									'{address_1}',
									'{address_2}',
									'{city}',
									'{postcode}',
									'{zone}',
									'{zone_code}',
									'{country}'
									);
								
									$replace = array(
										'firstname' => $order_info['shipping_firstname'],
										'lastname'  => $order_info['shipping_lastname'],
										'company'   => $order_info['shipping_company'],
										'address_1' => $order_info['shipping_address_1'],
										'address_2' => $order_info['shipping_address_2'],
										'city'      => $order_info['shipping_city'],
										'postcode'  => $order_info['shipping_postcode'],
										'zone'      => $order_info['shipping_zone'],
										'zone_code' => $order_info['shipping_zone_code'],
										'country'   => $order_info['shipping_country']  
									);
									$template->data['cust_shipping_address'] = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));
								} else {
									$format = '<b>{firstname} {lastname}</b>' . "\n" . '{company}' . "\n" . '{address_1}' . "\n" . '{address_2}' . "\n" . '{city}, {postcode}' . "\n" . '{zone}, {country}';
									$find = array(
										'{firstname}',
										'{lastname}',
										'{company}',
										'{address_1}',
										'{address_2}',
										'{city}',
										'{postcode}',
										'{zone}',
										'{zone_code}',
										'{country}'
									);
								
									$replace = array(
										'firstname' => $order_info['payment_firstname'],
										'lastname'  => $order_info['payment_lastname'],
										'company'   => $order_info['payment_company'],
										'address_1' => $order_info['payment_address_1'],
										'address_2' => $order_info['payment_address_2'],
										'city'      => $order_info['payment_city'],
										'postcode'  => $order_info['payment_postcode'],
										'zone'      => $order_info['payment_zone'],
										'zone_code' => $order_info['payment_zone_code'],
										'country'   => $order_info['payment_country']  
									);
									$template->data['cust_shipping_address'] = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));
								}
							} else {
								$template->data['cust_shipping_address'] = '';
							}
							
							/*show vendor information*/
							if ($this->config->get('vendor_address')) {
								$template->data['show_vendor_contact'] = True;
								$format = '<b>{firstname} {lastname}</b>' . "\n" . '{company}' . "\n" . '{address_1}' . "\n" . '{address_2}' . "\n" . '{city}, {postcode}' . "\n" . '{zone}, {country}';
									$find = array(
										'{firstname}',
										'{lastname}',
										'{company}',
										'{address_1}',
										'{address_2}',
										'{city}',
										'{postcode}',
										'{zone}',
										'{country}'
									);
									
								$zone_name = $this->db->query("SELECT name FROM " . DB_PREFIX . "zone WHERE zone_id = '" . (int)$vemail->row['zone_id'] . "' AND country_id = '" . (int)$vemail->row['country_id'] . "'");			
								$country_name = $this->db->query("SELECT name FROM " . DB_PREFIX . "country WHERE country_id = '" . (int)$vemail->row['country_id'] . "'");	
								
									$replace = array(
										'firstname' => $vemail->row['firstname'],
										'lastname'  => $vemail->row['lastname'],
										'company'   => $vemail->row['company'],
										'address_1' => $vemail->row['address_1'],
										'address_2' => $vemail->row['address_2'],
										'city'      => $vemail->row['city'],
										'postcode'  => $vemail->row['postcode'],
										'zone'  	=> isset($zone_name->row['name']) ? $zone_name->row['name'] : 'None',
										'country'   => $country_name->row['name']
									);
								
								$vendor_address = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));
								
								$template->data['vendor_address'] = $vendor_address . '<br/>';
								$template->data['text_vendor_contact'] = $language->get('text_vendor_contact');
								
								/*show vendor email*/
								if ($this->config->get('vendor_email')) {
									$template->data['vendor_email'] = '<b>' . $language->get('text_email') . ' </b>' . $vemail->row['email'] . '<br/>';
								} else {
									$template->data['vendor_email'] = '';
								}
								
								/*show vendor telephone*/
								if ($this->config->get('vendor_telephone')) {
									$template->data['vendor_telephone'] = '<b>' . $language->get('text_telephone') . ' </b>' . $vemail->row['telephone'] . '<br/>';
								} else {
									$template->data['vendor_telephone'] = '';
								}
								
							} else {
								$template->data['show_vendor_contact'] = False;
							}
							/*vendor address*/
						
							$vsubtotal = $this->db->query("SELECT SUM(total) AS sum_product_total, SUM(quantity*tax) as sum_product_tax FROM " . DB_PREFIX . "order_product op LEFT JOIN " . DB_PREFIX . "vendor v ON ( op.product_id = v.vproduct_id ) WHERE v.vendor =  '" . (int)$vendor['vendor_id'] . "' AND op.order_id =  '" . (int)$order_id . "'");
							$subtotal = $vsubtotal->row['sum_product_total'];
							$vat = $this->db->query("SELECT title FROM " . DB_PREFIX . "order_total WHERE order_id = '" . (int)$order_id . "' AND code = 'tax'");
	
							//get shipping cost
							$shipcost = $this->db->query("SELECT * FROM `" . DB_PREFIX . "order_shipping` WHERE vendor_id = '" . (int)$vendor['vendor_id'] . "' AND order_id = '" . (int)$order_id . "'");
							
							if ($this->config->get('tax_status') && ($vsubtotal->row['sum_product_tax'] != 0)) {
								$template->data['text_tax'] = $vat->row['title'];
								$template->data['tax'] = $this->currency->format($vsubtotal->row['sum_product_tax'] + $shipcost->row['tax']);
							} else {
								$template->data['tax'] = '0';
							}
								
							if ($shipcost->rows) {
								if ($shipcost->row['cost']) {
									$total = $vsubtotal->row['sum_product_total'] + $shipcost->row['cost'] + ($this->config->get('tax_status') ? ($vsubtotal->row['sum_product_tax'] + $shipcost->row['tax']): 0);
								} else {
									$total = $vsubtotal->row['sum_product_total'] + ($this->config->get('tax_status') ? $vsubtotal->row['sum_product_tax']: 0);
								}
								
								$template->data['shipping'] = $shipcost->row['title'] . ' (' . $this->weight->format($shipcost->row['weight'], $this->config->get('config_weight_class_id')) . ')';
								$template->data['scost'] = $this->currency->format($shipcost->row['cost']);
								
							} else {
								$total = $vsubtotal->row['sum_product_total'] + ($this->config->get('tax_status') ? $vsubtotal->row['sum_product_tax']: 0);
								$template->data['scost'] = 0;
							}
							
							//end get shipping cost
							
							foreach ($vendor_products as $vendor_product) {
								if ($vendor['vendor_id'] == $vendor_product['vendor_id']) {
									$template->data['vendor_products'][] = array(
										'name'     => $vendor_product['name'],
										'option'   => $vendor_product['option'],
										'model'    => $vendor_product['model'],
										'sku'	   => $vendor_product['sku'],
										'price'	   => $this->currency->format($vendor_product['price'] + ($this->config->get('tax_status') ? $vendor_product['tax'] : 0)),
										'quantity' => $vendor_product['quantity'],
										'total'	   => $this->currency->format($vendor_product['total'] + ($this->config->get('tax_status') ? ($vendor_product['tax'] * $vendor_product['quantity']) : 0)),
										'email'    => $vendor_product['email']
									);
								}
							}
							
							$template->data['product'] = $language->get('column_product');
							$template->data['model'] = $language->get('column_model');
							$template->data['quantity'] = $language->get('column_quantity');
							$template->data['unit_price'] = $language->get('column_unit_price');
							$template->data['total'] = $language->get('column_total');
							$template->data['subtotal'] = $language->get('column_subtotal');
							$template->data['vendor_auto_msg'] = $language->get('text_vendor_auto_msg');
							$template->data['vendor_alert'] = $language->get('text_vendor_email') . $this->config->get('config_title');
							$template->data['vsubtotal'] = $this->currency->format($subtotal);
							$template->data['vtotal'] = $this->currency->format($total);
							
							if (file_exists(DIR_TEMPLATE . $this->config->get('config_template') . '/template/mail/vendor_email.tpl')) {
								$html = $template->fetch($this->config->get('config_template') . '/template/mail/vendor_email.tpl');
							} else {
								$html = $template->fetch('default/template/mail/vendor_email.tpl');
							}
							
							$mail->setHtml($html);
							$mail->send();
						} 
					}
				}
			}
			/*code end*/
			]]></add>
		</operation>
		
		<operation error="skip">
			<search position="before"><![CDATA[
			public function update($order_id, $order_status_id, $comment = '', $notify = false) {
			]]></search>
			<add><![CDATA[
			Private function getdescost() {
			$purchase_product = array();
			$vendor_country = array();
			$product_vendor = array();
			$purchase_data =array();
			$filtered_geo_zone_id = array();
			$vendor_data = array();
				
			$address = array();
			if (isset($this->session->data['shipping_address_id']) && $this->session->data['shipping_address_id']) { 
				$this->load->model('account/address');
				$address = $this->model_account_address->getAddress($this->session->data['payment_address_id']);
			} elseif (isset($this->session->data['payment_address_id']) && $this->session->data['payment_address_id']) { 
				$this->load->model('account/address');
				$address = $this->model_account_address->getAddress($this->session->data['payment_address_id']);
			} else { 
				$address = (isset($this->session->data['guest'])) ? $this->session->data['guest'] : array();
			}

			$country_id	= (isset($address['country_id'])) ? $address['country_id'] : $this->session->data['guest']['payment']['country_id'];
			$zone_id 	= (isset($address['zone_id'])) ? $address['zone_id'] : $this->session->data['guest']['payment']['zone_id'];
			
			foreach ($this->cart->getProducts() as $product) {
				if ($product['shipping']) {
					$purchase_product = $this->db->query("SELECT vs.vendor_id AS vendor_id, vs.country_id as country_id FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "vendor v ON (p.product_id = v.vproduct_id) LEFT JOIN " . DB_PREFIX . "vendors vs ON (v.vendor = vs.vendor_id) WHERE p.product_id = '" . (int)$product['product_id'] . "'");
						$purchase_data[] = array (
							'product_id'  	=> $product['product_id'],
							'weight'		=> (float)$product['weight'],
							'country_id'	=> $purchase_product->row['country_id'],
							'vendor_id'		=> $purchase_product->row['vendor_id']
						);
							
					$vendor_country[] = $purchase_product->row['country_id'];
					$product_vendor[] = array ('vendor_id'	=> $purchase_product->row['vendor_id']);
				}
			}
					
			$scountry = array_filter(array_unique($vendor_country));
			$svendor = array_map("unserialize", array_unique(array_map("serialize", $product_vendor)));
					
			$pquery = $this->db->query("SELECT * FROM " . DB_PREFIX . "geo_zone ORDER BY geo_zone_id");
			$pgetvendors = $this->db->query("SELECT * FROM " . DB_PREFIX . "vendors");

			foreach ($pquery->rows as $geo_zone) {
				if (in_array($this->config->get('mvweight_' . $geo_zone['geo_zone_id'] . '_scountry'),$scountry)) { 
					foreach ($pgetvendors->rows as $getvendor) {
						if ($this->config->get('mvweight_' . $geo_zone['geo_zone_id'] . '_vendors')) {
							if (in_array($getvendor['vendor_id'],$this->config->get('mvweight_' . $geo_zone['geo_zone_id'] . '_vendors'))) {
								$filtered_geo_zone_id[] = array('geo_zone'	=>	(int)$geo_zone['geo_zone_id']);
							}
						}
					}
				} 
			}
					
			$desGeoZone = array_map("unserialize", array_unique(array_map("serialize", $filtered_geo_zone_id)));
			
			$group_total_weight = 0;
			foreach ($svendor as $vendor) {
				${'group_' . $vendor['vendor_id'] . '_weight'} = '';
				foreach ($purchase_data as $pd_weight) {
					if (isset($pd_weight['product_id'])) {
						if ($pd_weight['vendor_id'] == $vendor['vendor_id']) {
							${'group_' . $vendor['vendor_id'] . '_weight'} += $pd_weight['weight'];
						}
					}
				}
				${'get_group_vendor_id_' . $vendor['vendor_id'] . '_weight'} = 'group_vendor_id_' . $vendor['vendor_id'] . '_weight';
				$group_total_weight += ${'group_' . $vendor['vendor_id'] . '_weight'};
			}
				
			foreach ($desGeoZone as $geo_zone) {
				if ($this->config->get('mvweight_' . (int)$geo_zone['geo_zone'] . '_status')) {
					$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "zone_to_geo_zone WHERE geo_zone_id = '" . (int)$geo_zone['geo_zone'] . "' AND country_id = '" . (int)$country_id . "' AND (zone_id = '" . (int)$zone_id . "' OR zone_id = '0')");
						
					if ($query->num_rows) {
						$status = true;
					} else {
						$status = false;
					}
							
				} else {
					$status = false;
				}
						
				if ($status) {
					foreach ($svendor as $vendor) {
						if (in_array(preg_replace("/[^0-9]/", '', ${'get_group_vendor_id_' . $vendor['vendor_id'] . '_weight'}), $this->config->get('mvweight_' . (int)$geo_zone['geo_zone'] . '_vendors'))) {
							$weight = ${'group_' . $vendor['vendor_id'] . '_weight'};
							$rates = explode(',', $this->config->get('mvweight_' . (int)$geo_zone['geo_zone'] . '_rate'));
							foreach ($rates as $rate) {
								$data = explode(':', $rate);
								if ($data[0] >= $weight) {
									if (isset($data[1])) {
										$vendor_data[] = array(
											'vendor_id'	=>	$vendor['vendor_id'],
											'cost'		=>	$data[1],
											'weight'	=>	(float)$weight
										);
									}
									break;
								}
							}
						}
					}
				}
			}
			return $vendor_data;
		}
		
		Private function mv_flat_shipping() {
				
			$mv_flat_data = array();		
			foreach ($this->cart->getProducts() as $product) {
				if ($product['shipping']) {
					$vproduct = $this->db->query("SELECT v.vendor, v.prefered_shipping, v.shipping_cost, p.weight FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "vendor v ON (p.product_id = v.vproduct_id) WHERE p.product_id = '" . (int)$product['product_id'] . "'");
						if ($this->config->get('mvflat_shipping_method') == $vproduct->row['prefered_shipping']) {
							$mv_flat_data[] = array (
								'vendor' 	=> (int)$vproduct->row['vendor'],
								'weight'	=> (float)$vproduct->row['weight']*$product['quantity'],
								'cost'		=> (float)$vproduct->row['shipping_cost']*$product['quantity']
								);
						}
				}
			}
			
			return $mv_flat_data;
		
		}
		]]></add>
		</operation>
	</file>
	
	<file name="catalog/view/theme/default/template/common/header.tpl">
		<operation error="skip">
			<search position="replace"><![CDATA[
			<a href="<?php echo $home; ?>"><?php echo $text_home; ?></a>
			]]></search>
			<add trim="true"><![CDATA[
			<a href="<?php echo $home; ?>"><?php echo $text_home; ?></a><?php if ($this->config->get('sign_up')) { ?><a href="<?php echo $signup; ?>"><?php echo $txt_signup; ?></a><?php } ?>
			]]></add>
		</operation>
	</file>
</modification>